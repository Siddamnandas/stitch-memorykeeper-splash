{"version":3,"file":"OnboardingWizard-DXF8AcSp.js","sources":["../../src/components/OnboardingWizard.tsx"],"sourcesContent":["import React from 'react';\nimport { useAuth } from '../lib/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { useError } from '../lib/ErrorContext';\nimport { useAppState } from '../lib/AppStateContext';\nimport { useState, useEffect, useContext, useCallback, useMemo, useRef } from 'react';\n\nconst OnboardingWizard: React.FC = () => {\n  const [step, setStep] = useState(1);\n  const [formData, setFormData] = useState({\n    fullName: '',\n    age: 75,\n    avatarChoice: '',\n    themePreference: 'Nostalgic',\n    memoryGoals: [] as string[],\n    preferredGames: [] as string[],\n    notificationPreferences: {\n      emailReminders: true,\n      pushNotifications: true,\n      weeklyProgress: true\n    },\n    consentAnalysis: false,\n    consentSummaries: false,\n    familyInvites: [] as string[]\n  });\n  const [pendingInviteEmail, setPendingInviteEmail] = useState('');\n\n  const { dispatch } = useAppState();\n  const { user, updateProfile, completeOnboarding, profile } = useAuth();\n  const navigate = useNavigate();\n  const { addToast } = useError();\n\n  const avatarOptions = useMemo(\n    () => [\n      'https://lh3.googleusercontent.com/aida-public/AB6AXuCeW0K825tSHTOFLVjt4RJuHWeiQUAScsjefQkGG69fd-OCCDkCBJQbJJW84VvOiPWdPfTAmOgUf5fRmAqjeZ8TC8L1jYiEsHG0CXsFlf1fPOdeDWRFXyslF38PLSb6Yiawz4zyghK9PbTQNIrW05k4bE94lpbD-z6C40GdpwCRbTaYXZ8xsUuV9ZcK-LwYmykoP5NvumqtASjGQ-HUyyZD6MV6UlMF1MoN5NLOspJpZJXYVDWRUyW7EiuVFgXt04rTD0EbT2q2Kto',\n      'https://lh3.googleusercontent.com/aida-public/AB6AXuDsfOU4yaRaiQ4E0_JijA4PUs0pRfokl5TZAk52ccVRSE0BnpXPkThVwnKszLvTa3DUkaoZa3UYwVOPff-tPzPXoq-iMn1ET_96TXZ5dDBuyQAly23XTxauMUV5yG6EkERRLNn1rVqvpHPEBpsW1zh59fjdnxJ-b3DIFF9O5bIzpWYW2JU8dKfHrQ8d1uelf1uJR92lNdRm-TqhMH4gfz-EBoXR1mvbg-cdS1kn69sBLe8pn3ykzKJTnovmH3PRuwzUZnkX4YWyre0',\n      'https://lh3.googleusercontent.com/aida-public/AB6AXuAX6ITAG-dmy4A27VaOOvbddKpDGbJGUvaYKJh1VBGL_BNSSaHW42fcS4aH6nw9nda8lT3r1Ywd2IyohWdA0yB6p4ZoIArAM75ES8Q_Kjm5WKMmAkupLknZvJCa3WHFCBZzu1DBRtgai5a5_gGpgRwvEIbpcMJthmtWk20H8sNge7usJ6yEDXB9fa7XjICTncvd6t2vPfHKs4v0vwFUyTi3Gbd-x0azWBZ6oYiNYWdm0CPVW2Qrj0xMDn0yPW-83m8R5n0FEs2Uwhg',\n      'https://lh3.googleusercontent.com/aida-public/AB6AXuA6lJdVS8trAW1Fowy1bZVMTZYpMIJoZJBaH_KHn3zdJaVN0ybJakCD-L6QTCUWt2po2T0hXZrS0YoGXnLAU3uHL2kU0NV-jCHxXVKPBVGZnQm7th7x903CmWON4xan5twzgIztZpD1yxHT2zKAZZch7wNZxI2nJh2cqB234bw7ZeZBMiZlwYH2Rpb0c2ZMyu1jrAlmxUAmkdU10GlYxrUZ3LasZKyH6Yfb_Gma2-3jY3lg'\n    ],\n    []\n  );\n\n  const themeOptions = useMemo(\n    () => [\n      {\n        key: 'Nostalgic',\n        label: 'Nostalgic',\n        description: 'Warm sepia tones with gentle gradients',\n        gradient: 'from-amber-200 to-orange-200'\n      },\n      {\n        key: 'Fun',\n        label: 'Fun',\n        description: 'Bright cheerful colors for playful energy',\n        gradient: 'from-pink-300 to-purple-300'\n      },\n      {\n        key: 'High Contrast',\n        label: 'High Contrast',\n        description: 'Bold contrasts for maximum readability',\n        gradient: 'from-slate-900 to-slate-600'\n      },\n      {\n        key: 'Dark Mode',\n        label: 'Dark Mode',\n        description: 'Soft, dusk-like palette for evening use',\n        gradient: 'from-zinc-800 to-zinc-600'\n      }\n    ],\n    []\n  );\n\n  const totalSteps = 7;\n\n  const handleInputChange = (field: string, value: any) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleMemoryGoalToggle = (goal: string) => {\n    setFormData(prev => ({\n      ...prev,\n      memoryGoals: prev.memoryGoals.includes(goal)\n        ? prev.memoryGoals.filter(g => g !== goal)\n        : [...prev.memoryGoals, goal]\n    }));\n  };\n\n  const handleGamePreferenceToggle = (game: string) => {\n    setFormData(prev => ({\n      ...prev,\n      preferredGames: prev.preferredGames.includes(game)\n        ? prev.preferredGames.filter(g => g !== game)\n        : [...prev.preferredGames, game]\n    }));\n  };\n\n  const handleNotificationToggle = (preference: string) => {\n    setFormData(prev => ({\n      ...prev,\n      notificationPreferences: {\n        ...prev.notificationPreferences,\n        [preference]: !prev.notificationPreferences[preference as keyof typeof prev.notificationPreferences]\n      }\n    }));\n  };\n\n  const handleAvatarSelect = (avatar: string) => {\n    setFormData(prev => ({\n      ...prev,\n      avatarChoice: avatar\n    }));\n  };\n\n  const handleThemeSelect = (theme: string) => {\n    setFormData(prev => ({\n      ...prev,\n      themePreference: theme\n    }));\n  };\n\n  const validateEmail = (value: string) => {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value.trim());\n  };\n\n  const handleAddInvite = () => {\n    const email = pendingInviteEmail.trim();\n    if (!email) return;\n    if (!validateEmail(email)) {\n      addToast({\n        type: 'error',\n        title: 'Invalid Email',\n        message: 'Please enter a valid email address.',\n        duration: 4000\n      });\n      return;\n    }\n\n    setFormData(prev => ({\n      ...prev,\n      familyInvites: Array.from(new Set([...prev.familyInvites, email.toLowerCase()]))\n    }));\n    setPendingInviteEmail('');\n  };\n\n  const handleRemoveInvite = (email: string) => {\n    setFormData(prev => ({\n      ...prev,\n      familyInvites: prev.familyInvites.filter(item => item !== email)\n    }));\n  };\n\n  const isNextDisabled = useMemo(() => {\n    switch (step) {\n      case 2:\n        return !formData.fullName.trim() || Number.isNaN(formData.age) || formData.age <= 0;\n      case 3:\n        return !formData.avatarChoice || !formData.themePreference;\n      default:\n        return false;\n    }\n  }, [formData.avatarChoice, formData.age, formData.fullName, formData.themePreference, step]);\n\n  const handleNext = () => {\n    if (step < totalSteps) {\n      setStep(prev => Math.min(totalSteps, prev + 1));\n    } else {\n      handleComplete();\n    }\n  };\n\n  const handleBack = () => {\n    if (step > 1) {\n      setStep(prev => Math.max(1, prev - 1));\n    }\n  };\n\n  useEffect(() => {\n    if (!profile) {\n      return;\n    }\n\n    setFormData(prev => ({\n      ...prev,\n      fullName: profile.full_name || prev.fullName,\n      age: profile.age ?? prev.age,\n      avatarChoice: profile.avatar_choice || prev.avatarChoice,\n      themePreference: profile.theme_preference || prev.themePreference,\n      memoryGoals: profile.memory_goals || prev.memoryGoals,\n      preferredGames: profile.preferred_games || prev.preferredGames,\n      notificationPreferences: profile.notification_preferences || prev.notificationPreferences,\n      consentAnalysis: profile.ai_consent_analysis ?? prev.consentAnalysis,\n      consentSummaries: profile.ai_consent_summaries ?? prev.consentSummaries,\n      familyInvites: profile.invited_family_emails || prev.familyInvites\n    }));\n  }, [profile]);\n\n  const finalizeOnboarding = useCallback(() => {\n    try {\n      localStorage.setItem('hasSeenOnboarding', 'true');\n    } catch (error) {\n      console.warn('Unable to persist onboarding completion flag:', error);\n    }\n    dispatch({ type: 'COMPLETE_ONBOARDING' });\n  }, [dispatch]);\n\n  const handleComplete = async () => {\n    try {\n      const inviteEmails = Array.from(new Set(formData.familyInvites.map(email => email.trim().toLowerCase()))).filter(Boolean);\n\n      // Update profile with onboarding data\n      await updateProfile({\n        full_name: formData.fullName,\n        avatar_choice: formData.avatarChoice || undefined,\n        age: formData.age,\n        theme_preference: formData.themePreference,\n        memory_goals: formData.memoryGoals,\n        preferred_games: formData.preferredGames,\n        notification_preferences: formData.notificationPreferences,\n        ai_consent_analysis: formData.consentAnalysis,\n        ai_consent_summaries: formData.consentSummaries,\n        invited_family_emails: inviteEmails\n      });\n\n      // Mark onboarding as complete\n      await completeOnboarding();\n      finalizeOnboarding();\n\n      addToast({\n        type: 'success',\n        title: 'Welcome to MemoryKeeper!',\n        message: 'Your profile has been set up successfully.',\n        duration: 4000\n      });\n\n      navigate('/memory-keeper-main');\n    } catch (error) {\n      addToast({\n        type: 'error',\n        title: 'Setup Failed',\n        message: 'There was an error completing your setup. Please try again.',\n        duration: 5000\n      });\n    }\n  };\n\n  const renderStep = () => {\n    switch (step) {\n      case 1:\n        return (\n          <div className=\"text-center\">\n            <div className=\"w-20 h-20 bg-gradient-to-br from-blue-400 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <svg className=\"w-10 h-10 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n              </svg>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Welcome to MemoryKeeper!</h2>\n            <p className=\"text-gray-600 mb-6\">\n              Let's personalize your experience with a quick setup. This will help us tailor prompts, games, and reminders to your goals.\n            </p>\n            <div className=\"bg-blue-50 p-4 rounded-xl mb-6\">\n              <p className=\"text-blue-800 text-sm\">\n                <strong>What you'll set up:</strong> Your profile, favorite themes, memory goals, game preferences, privacy consent, and optional family invites.\n              </p>\n            </div>\n          </div>\n        );\n\n      case 2:\n        return (\n          <div>\n            <div className=\"w-20 h-20 bg-gradient-to-br from-green-400 to-green-600 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <svg className=\"w-10 h-10 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-4-9a4 4 0 11-8 0\" />\n              </svg>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-4 text-center\">Tell us about you</h2>\n            <p className=\"text-gray-600 mb-6 text-center\">\n              We'll use this to personalize your experience and adjust recommendations to your stage of life.\n            </p>\n            <div className=\"max-w-md mx-auto space-y-6\">\n              <input\n                type=\"text\"\n                value={formData.fullName}\n                onChange={(e) => handleInputChange('fullName', e.target.value)}\n                className=\"w-full p-4 bg-orange-50/50 rounded-2xl border border-orange-200 focus:border-orange-400 focus:ring-2 focus:ring-orange-200/50 outline-none transition-all text-lg\"\n                placeholder=\"Enter your full name\"\n                required\n              />\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\" htmlFor=\"age-input\">\n                  Age\n                </label>\n                <input\n                  id=\"age-input\"\n                  type=\"number\"\n                  min={40}\n                  max={120}\n                  value={formData.age}\n                  onChange={(e) => handleInputChange('age', Number(e.target.value))}\n                  className=\"w-full p-4 bg-white rounded-2xl border border-orange-200 focus:border-orange-400 focus:ring-2 focus:ring-orange-200/40 outline-none transition-all text-lg\"\n                  placeholder=\"e.g., 72\"\n                />\n                <p className=\"mt-2 text-sm text-gray-500 text-center\">You can update this later in your profile settings.</p>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 3:\n        return (\n          <div>\n            <div className=\"w-20 h-20 bg-gradient-to-br from-purple-400 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <svg className=\"w-10 h-10 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 14l9-5-9-5-9 5 9 5z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.955 11.955 0 0012 20.055a11.955 11.955 0 00-6.825-2.998 12.078 12.078 0 01.665-6.479L12 14z\" />\n              </svg>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-4 text-center\">Choose your style</h2>\n            <p className=\"text-gray-600 mb-6 text-center\">\n              Pick an avatar and theme that feel like you. You can change these anytime.\n            </p>\n\n            <div className=\"grid grid-cols-2 gap-3 max-w-md mx-auto mb-8\">\n              {avatarOptions.map((avatar) => (\n                <button\n                  key={avatar}\n                  onClick={() => handleAvatarSelect(avatar)}\n                  className={`p-3 rounded-2xl border-2 transition-all flex flex-col items-center gap-3 ${\n                    formData.avatarChoice === avatar\n                      ? 'border-orange-400 bg-orange-50 shadow-lg'\n                      : 'border-gray-200 bg-white hover:border-orange-200'\n                  }`}\n                >\n                  <img src={avatar} alt=\"Avatar option\" className=\"w-20 h-20 rounded-2xl object-cover\" />\n                  <span className=\"text-sm font-medium text-gray-700\">Avatar</span>\n                </button>\n              ))}\n            </div>\n\n            <div className=\"space-y-3 max-w-md mx-auto\">\n              {themeOptions.map((theme) => (\n                <button\n                  key={theme.key}\n                  onClick={() => handleThemeSelect(theme.key)}\n                  className={`w-full rounded-2xl p-4 border-2 transition-all text-left ${\n                    formData.themePreference === theme.key\n                      ? 'border-orange-400 bg-orange-50 shadow-lg'\n                      : 'border-gray-200 bg-white hover:border-orange-200'\n                  }`}\n                >\n                  <div className={`h-20 w-full rounded-2xl mb-3 bg-gradient-to-r ${theme.gradient}`}></div>\n                  <p className=\"text-lg font-semibold text-gray-800\">{theme.label}</p>\n                  <p className=\"text-sm text-gray-600\">{theme.description}</p>\n                </button>\n              ))}\n            </div>\n          </div>\n        );\n\n      case 4:\n        return (\n          <div>\n            <div className=\"w-20 h-20 bg-gradient-to-br from-purple-400 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <svg className=\"w-10 h-10 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n              </svg>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-4 text-center\">What are your memory goals?</h2>\n            <p className=\"text-gray-600 mb-6 text-center\">\n              Select all that apply to help us customize your experience.\n            </p>\n            <div className=\"grid grid-cols-1 gap-3 max-w-md mx-auto\">\n              {[\n                'Improve daily memory recall',\n                'Remember names and faces better',\n                'Keep track of important dates',\n                'Enhance learning and studying',\n                'Maintain cognitive health',\n                'Challenge myself with games'\n              ].map((goal) => (\n                <button\n                  key={goal}\n                  onClick={() => handleMemoryGoalToggle(goal)}\n                  className={`p-4 rounded-xl border-2 transition-all text-left ${\n                    formData.memoryGoals.includes(goal)\n                      ? 'bg-orange-100 border-orange-400 text-orange-800'\n                      : 'bg-white border-gray-200 text-gray-700 hover:bg-gray-50'\n                  }`}\n                >\n                  <div className=\"flex items-center gap-3\">\n                    <div className={`w-5 h-5 rounded border-2 flex items-center justify-center ${\n                      formData.memoryGoals.includes(goal)\n                        ? 'bg-orange-500 border-orange-500'\n                        : 'border-gray-300'\n                    }`}>\n                      {formData.memoryGoals.includes(goal) && (\n                        <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                        </svg>\n                      )}\n                    </div>\n                    <span className=\"text-sm font-medium\">{goal}</span>\n                  </div>\n                </button>\n              ))}\n            </div>\n          </div>\n        );\n\n      case 5:\n        return (\n          <div>\n            <div className=\"w-20 h-20 bg-gradient-to-br from-orange-400 to-orange-600 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <svg className=\"w-10 h-10 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1.586a1 1 0 01.707.293l.707.707A1 1 0 0012.414 11H13m-4 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-4 text-center\">Which games interest you?</h2>\n            <p className=\"text-gray-600 mb-6 text-center\">\n              We'll prioritize these games in your personalized experience.\n            </p>\n            <div className=\"grid grid-cols-1 gap-3 max-w-md mx-auto\">\n              {[\n                'Echo Echo (Sound Memory)',\n                'Legacy Link (Word Association)',\n                'Snapshot Solve (Visual Puzzles)',\n                'Story Quiz Quest (Narrative Memory)',\n                'Memory Matchup (Card Matching)',\n                'Timeline Tango (Chronological Order)'\n              ].map((game) => (\n                <button\n                  key={game}\n                  onClick={() => handleGamePreferenceToggle(game)}\n                  className={`p-4 rounded-xl border-2 transition-all text-left ${\n                    formData.preferredGames.includes(game)\n                      ? 'bg-orange-100 border-orange-400 text-orange-800'\n                      : 'bg-white border-gray-200 text-gray-700 hover:bg-gray-50'\n                  }`}\n                >\n                  <div className=\"flex items-center gap-3\">\n                    <div className={`w-5 h-5 rounded border-2 flex items-center justify-center ${\n                      formData.preferredGames.includes(game)\n                        ? 'bg-orange-500 border-orange-500'\n                        : 'border-gray-300'\n                    }`}>\n                      {formData.preferredGames.includes(game) && (\n                        <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                        </svg>\n                      )}\n                    </div>\n                    <span className=\"text-sm font-medium\">{game}</span>\n                  </div>\n                </button>\n              ))}\n            </div>\n          </div>\n        );\n\n      case 6:\n        return (\n          <div>\n            <div className=\"w-20 h-20 bg-gradient-to-br from-pink-400 to-pink-600 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <svg className=\"w-10 h-10 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-5 5v-5zM4.868 12.683A17.925 17.925 0 0112 21c7.962 0 12-1.21 12-2.683m-12 2.683a17.925 17.925 0 01-7.132-8.317M12 21c4.411 0 8-4.03 8-9s-3.589-9-8-9-8 4.03-8 9a9.06 9.06 0 001.832 5.445L4 21l4.868-2.317z\" />\n              </svg>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-4 text-center\">Stay in the loop</h2>\n            <p className=\"text-gray-600 mb-6 text-center\">\n              Choose how you'd like to receive reminders and updates, and let us know how we can use AI to support you.\n            </p>\n            <div className=\"space-y-4 max-w-md mx-auto\">\n              {[\n                { key: 'emailReminders', label: 'Email reminders for memory practice' },\n                { key: 'pushNotifications', label: 'Push notifications for game suggestions' },\n                { key: 'weeklyProgress', label: 'Weekly progress reports' }\n              ].map(({ key, label }) => (\n                <div key={key} className=\"flex items-center justify-between p-4 bg-white rounded-xl border border-gray-200\">\n                  <span className=\"text-sm font-medium text-gray-700\">{label}</span>\n                  <button\n                    onClick={() => handleNotificationToggle(key)}\n                    className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                      formData.notificationPreferences[key as keyof typeof formData.notificationPreferences]\n                        ? 'bg-orange-500'\n                        : 'bg-gray-200'\n                    }`}\n                  >\n                    <span\n                      className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                        formData.notificationPreferences[key as keyof typeof formData.notificationPreferences]\n                          ? 'translate-x-6'\n                          : 'translate-x-1'\n                      }`}\n                    />\n                  </button>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"mt-8 space-y-3 max-w-md mx-auto\">\n              <h3 className=\"text-lg font-semibold text-gray-800\">AI Privacy & Consent</h3>\n              <p className=\"text-sm text-gray-600\">We use AI to craft prompts and summaries. Choose the ways you're comfortable with.</p>\n              <label className=\"flex items-start gap-3 p-4 bg-white rounded-xl border border-gray-200\">\n                <input\n                  type=\"checkbox\"\n                  checked={formData.consentAnalysis}\n                  onChange={(e) => handleInputChange('consentAnalysis', e.target.checked)}\n                  className=\"mt-1 h-5 w-5 rounded border-2 border-gray-300 text-orange-500 focus:ring-orange-400\"\n                />\n                <span className=\"text-sm text-gray-700\">\n                  I consent to AI analysing my memories to improve prompts and game suggestions.\n                </span>\n              </label>\n              <label className=\"flex items-start gap-3 p-4 bg-white rounded-xl border border-gray-200\">\n                <input\n                  type=\"checkbox\"\n                  checked={formData.consentSummaries}\n                  onChange={(e) => handleInputChange('consentSummaries', e.target.checked)}\n                  className=\"mt-1 h-5 w-5 rounded border-2 border-gray-300 text-orange-500 focus:ring-orange-400\"\n                />\n                <span className=\"text-sm text-gray-700\">\n                  I consent to AI generating shareable summaries of my memories.\n                </span>\n              </label>\n            </div>\n          </div>\n        );\n\n      case 7:\n        return (\n          <div>\n            <div className=\"w-20 h-20 bg-gradient-to-br from-teal-400 to-cyan-500 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <svg className=\"w-10 h-10 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8h2a2 2 0 012 2v11H3V10a2 2 0 012-2h2\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 12v3m0 0v3m0-3h3m-3 0H9m3-5a3 3 0 100-6 3 3 0 000 6z\" />\n              </svg>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-4 text-center\">Invite your family</h2>\n            <p className=\"text-gray-600 mb-6 text-center\">\n              Invite loved ones to follow along. You can skip this step or add more later.\n            </p>\n            <div className=\"max-w-md mx-auto space-y-4\">\n              <div className=\"flex gap-2\">\n                <input\n                  type=\"email\"\n                  value={pendingInviteEmail}\n                  onChange={(e) => setPendingInviteEmail(e.target.value)}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') {\n                      e.preventDefault();\n                      handleAddInvite();\n                    }\n                  }}\n                  className=\"flex-1 p-3 bg-white rounded-2xl border border-orange-200 focus:border-orange-400 focus:ring-2 focus:ring-orange-200/50 outline-none transition-all\"\n                  placeholder=\"family@example.com\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={handleAddInvite}\n                  className=\"px-4 py-3 bg-gradient-to-r from-orange-500 to-rose-500 text-white rounded-2xl font-semibold shadow hover:shadow-lg transition-all\"\n                >\n                  Add\n                </button>\n              </div>\n\n              {formData.familyInvites.length > 0 && (\n                <div className=\"space-y-2\">\n                  {formData.familyInvites.map((email) => (\n                    <div key={email} className=\"flex items-center justify-between px-4 py-3 bg-orange-50 rounded-2xl border border-orange-200\">\n                      <span className=\"text-sm font-medium text-orange-800\">{email}</span>\n                      <button\n                        type=\"button\"\n                        onClick={() => handleRemoveInvite(email)}\n                        className=\"text-sm text-orange-600 hover:text-orange-800\"\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              )}\n\n              <div className=\"p-4 bg-green-50 rounded-xl\">\n                <p className=\"text-green-800 text-sm text-center\">\n                  🎉 You're all set! Click \"Complete Setup\" to start your memory journey.\n                </p>\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-amber-50 via-orange-50 to-rose-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white/80 backdrop-blur-xl rounded-3xl p-8 shadow-xl border border-orange-100 w-full max-w-2xl\">\n        {/* Progress bar */}\n        <div className=\"mb-8\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <span className=\"text-sm font-medium text-gray-600\">Step {step} of {totalSteps}</span>\n            <span className=\"text-sm font-medium text-gray-600\">{Math.round((step / totalSteps) * 100)}% Complete</span>\n          </div>\n          <div className=\"bg-orange-200 h-2 rounded-full\">\n            <div\n              className=\"bg-gradient-to-r from-orange-500 to-rose-500 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${(step / totalSteps) * 100}%` }}\n            />\n          </div>\n        </div>\n\n        {/* Step content */}\n        <div className=\"min-h-[400px] flex flex-col\">\n          {renderStep()}\n\n          {/* Navigation buttons */}\n          <div className=\"flex justify-between mt-auto pt-8\">\n            <button\n              onClick={handleBack}\n              disabled={step === 1}\n              className=\"px-6 py-3 rounded-2xl font-semibold border border-gray-300 text-gray-700 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-all\"\n            >\n              Back\n            </button>\n            <button\n              onClick={handleNext}\n              disabled={isNextDisabled}\n              className=\"px-6 py-3 rounded-2xl font-semibold bg-gradient-to-r from-orange-500 to-rose-500 text-white hover:shadow-lg disabled:opacity-50 disabled:cursor-not-allowed transition-all\"\n            >\n              {step === totalSteps ? 'Complete Setup' : 'Next'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OnboardingWizard;\n"],"names":["OnboardingWizard","step","setStep","useState","formData","setFormData","pendingInviteEmail","setPendingInviteEmail","dispatch","useAppState","user","updateProfile","completeOnboarding","profile","useAuth","navigate","useNavigate","addToast","useError","avatarOptions","useMemo","themeOptions","totalSteps","handleInputChange","field","value","prev","handleMemoryGoalToggle","goal","g","handleGamePreferenceToggle","game","handleNotificationToggle","preference","handleAvatarSelect","avatar","handleThemeSelect","theme","validateEmail","handleAddInvite","email","handleRemoveInvite","item","isNextDisabled","handleNext","handleComplete","handleBack","useEffect","finalizeOnboarding","useCallback","error","inviteEmails","renderStep","jsxs","jsx","e","key","label"],"mappings":"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"}