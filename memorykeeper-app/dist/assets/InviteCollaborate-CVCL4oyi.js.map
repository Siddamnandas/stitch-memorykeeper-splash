{"version":3,"file":"InviteCollaborate-CVCL4oyi.js","sources":["../../src/components/InviteCollaborate.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { ChevronLeft, Plus, Mail, X, UserPlus, Loader2, AlertTriangle, Bell, CheckCircle, Image, Video, FileText } from 'lucide-react';\nimport { useAuth } from '../lib/AuthContext';\nimport { useError } from '../lib/ErrorContext';\nimport { Memory, addMemory } from '../lib/dataService';\nimport FileUpload, { ProcessedFileData } from './FileUpload';\nimport { sanitizeTextInput, sanitizeMemoryData } from '../lib/inputSanitizer';\nimport {\n  collaborativeMemoryService,\n  CollaborativeMemory,\n  CollaborationInvite\n} from '../lib/collaborativeMemoryService';\nimport { supabase } from '../lib/supabaseClient';\n\ntype CollectionWithDetails = CollaborativeMemory & {\n  ownerProfileName?: string | null;\n  ownerProfileAvatar?: string | null;\n  memoryDetails: Memory[];\n};\n\ntype InviteWithCollection = CollaborationInvite & {\n  collaborative_collections?: {\n    title?: string | null;\n  };\n  inviter?: {\n    full_name?: string | null;\n    avatar_url?: string | null;\n  };\n};\n\ntype SharedMemoryDetail = {\n  id: string;\n  permission_level: 'view' | 'edit' | 'admin';\n  shared_at: string;\n  memory: Memory;\n  owner?: {\n    full_name?: string | null;\n    avatar_url?: string | null;\n  };\n};\n\ntype ParsedMemoryContent = {\n  caption: string;\n  mediaType: 'image' | 'video' | 'document' | 'text';\n  preview?: string;\n  fileName?: string;\n};\n\nconst InviteCollaborate = ({ onBack }: { onBack: () => void }) => {\n  const { user } = useAuth();\n  const { addToast } = useError();\n\n  const userId = user?.id;\n  const userEmail = user?.email || '';\n\n  const [collections, setCollections] = useState<CollectionWithDetails[]>([]);\n  const [sharedMemories, setSharedMemories] = useState<SharedMemoryDetail[]>([]);\n  const [sentInvites, setSentInvites] = useState<CollaborationInvite[]>([]);\n  const [incomingInvites, setIncomingInvites] = useState<InviteWithCollection[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [activeCollectionId, setActiveCollectionId] = useState<string | null>(null);\n  const [inviteModalOpen, setInviteModalOpen] = useState(false);\n  const [inviteData, setInviteData] = useState({\n    email: '',\n    permission: 'view' as 'view' | 'edit',\n    message: ''\n  });\n  const [isSubmittingInvite, setIsSubmittingInvite] = useState(false);\n  const [respondingInviteId, setRespondingInviteId] = useState<string | null>(null);\n  const [selectedUploadCollectionId, setSelectedUploadCollectionId] = useState<string | null>(null);\n  const [pendingUpload, setPendingUpload] = useState<ProcessedFileData | null>(null);\n  const [uploadCaption, setUploadCaption] = useState('');\n  const [isUploadingMemory, setIsUploadingMemory] = useState(false);\n\n  const editableCollections = useMemo(() => {\n    if (!userId) return [] as CollectionWithDetails[];\n    return collections.filter((collection) => {\n      const permission = collection.permissions?.[userId];\n      return permission === 'admin' || permission === 'edit';\n    });\n  }, [collections, userId]);\n\n  // Set up real-time subscriptions\n  useEffect(() => {\n    if (!userId || !supabase) return;\n\n    // Subscribe to collaborative collections changes\n    const collectionsSubscription = supabase\n      .channel('collaborative_collections_changes')\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table: 'collaborative_collections'\n        },\n        async (payload) => {\n          // Reload data when collections change\n          await loadCollaborationData();\n          \n          // Show notification for new collections where user is a collaborator\n          if (payload.eventType === 'INSERT') {\n            const newCollection = payload.new as CollaborativeMemory;\n            if (newCollection.collaborators.includes(userId)) {\n              addToast({\n                type: 'success',\n                title: 'New Collection',\n                message: `You've been added to a new collaborative collection: ${newCollection.title}`,\n                duration: 5000\n              });\n            }\n          }\n        }\n      )\n      .subscribe();\n\n    // Subscribe to collaboration invites changes\n    const invitesSubscription = supabase\n      .channel('collaboration_invites_changes')\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table: 'collaboration_invites'\n        },\n        async (payload) => {\n          // Reload data when invites change\n          await loadCollaborationData();\n          \n          // Show notification for new invites\n          if (payload.eventType === 'INSERT') {\n            const newInvite = payload.new as CollaborationInvite;\n            if (newInvite.invited_user_email === userEmail || newInvite.invited_user_id === userId) {\n              addToast({\n                type: 'info',\n                title: 'New Invitation',\n                message: 'You have a new collaboration invitation!',\n                duration: 5000\n              });\n            }\n          }\n        }\n      )\n      .subscribe();\n\n    // Subscribe to shared memories changes\n    const sharedMemoriesSubscription = supabase\n      .channel('shared_memories_changes')\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table: 'memory_shares'\n        },\n        async (payload) => {\n          // Reload data when shared memories change\n          await loadCollaborationData();\n          \n          // Show notification for new shared memories\n          if (payload.eventType === 'INSERT') {\n            const newShare = payload.new;\n            if (newShare.shared_with_user_ids?.includes(userId)) {\n              addToast({\n                type: 'success',\n                title: 'New Shared Memory',\n                message: 'A family member shared a new memory with you!',\n                duration: 5000\n              });\n            }\n          }\n        }\n      )\n      .subscribe();\n\n    // Cleanup subscriptions on unmount\n    return () => {\n      collectionsSubscription.unsubscribe();\n      invitesSubscription.unsubscribe();\n      sharedMemoriesSubscription.unsubscribe();\n    };\n  }, [userId, userEmail, addToast]);\n\n  const loadCollaborationData = useCallback(async () => {\n    if (!userId) {\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const [collectionsRes, sharedRes, sentRes, incomingRes] = await Promise.all([\n        collaborativeMemoryService.getUserCollaborativeCollections(userId),\n        collaborativeMemoryService.getSharedMemoriesWithMe(userId),\n        collaborativeMemoryService.getInvitesSentByUser(userId),\n        collaborativeMemoryService.getInvitesForUser(userId, userEmail)\n      ]);\n\n      const rawCollections = collectionsRes.data ?? [];\n      const allMemoryIds = Array.from(\n        new Set(\n          rawCollections.flatMap((collection: CollaborativeMemory & { shared_memories?: string[] }) => collection.shared_memories ?? [])\n        )\n      ).filter(Boolean) as string[];\n\n      let memoryMap = new Map<string, Memory>();\n      if (allMemoryIds.length > 0) {\n        const memoryRes = await collaborativeMemoryService.getMemoriesByIds(allMemoryIds);\n        if (memoryRes.error) {\n          console.error('Error loading memory details:', memoryRes.error);\n          addToast({\n            type: 'error',\n            title: 'Load Failed',\n            message: 'Unable to load shared memory details.',\n            duration: 5000\n          });\n        } else {\n          memoryMap = new Map(\n            (memoryRes.data ?? [])\n              .filter((memory) => memory.id)\n              .map((memory) => [memory.id as string, memory])\n          );\n        }\n      }\n\n      const collectionsWithDetails: CollectionWithDetails[] = rawCollections.map((collection: any) => ({\n        ...collection,\n        ownerProfileName: collection.profiles?.full_name,\n        ownerProfileAvatar: collection.profiles?.avatar_url,\n        memoryDetails: (collection.shared_memories ?? [])\n          .map((memoryId: string) => memoryMap.get(memoryId))\n          .filter(Boolean) as Memory[]\n      }));\n\n      setCollections(collectionsWithDetails);\n      setActiveCollectionId((prev) => prev ?? (collectionsWithDetails[0]?.id ?? null));\n\n      const sharedDetails: SharedMemoryDetail[] = (sharedRes.data ?? [])\n        .map((item: any) => {\n          if (!item.memories) {\n            return null;\n          }\n          return {\n            id: item.id,\n            permission_level: item.permission_level,\n            shared_at: item.created_at ?? item.shared_at ?? new Date().toISOString(),\n            memory: item.memories as Memory,\n            owner: item.profiles\n          };\n        })\n        .filter(Boolean) as SharedMemoryDetail[];\n\n      setSharedMemories(sharedDetails);\n      setSentInvites(sentRes.data ?? []);\n      setIncomingInvites(incomingRes.data ?? []);\n    } catch (error) {\n      console.error('Error loading collaboration data:', error);\n      addToast({\n        type: 'error',\n        title: 'Load Failed',\n        message: 'Unable to load collaboration data. Please try again.',\n        duration: 5000\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [addToast, userEmail, userId]);\n\n  useEffect(() => {\n    if (userId) {\n      loadCollaborationData();\n    }\n  }, [loadCollaborationData, userId]);\n\n  useEffect(() => {\n    if (editableCollections.length > 0) {\n      setSelectedUploadCollectionId((prev) => prev ?? editableCollections[0].id);\n    } else {\n      setSelectedUploadCollectionId(null);\n      setPendingUpload(null);\n    }\n  }, [editableCollections]);\n\n  const handleOpenInvite = useCallback(() => {\n    if (collections.length === 0) {\n      addToast({\n        type: 'warning',\n        title: 'No Collections',\n        message: 'Create a collaborative collection before inviting others.',\n        duration: 4000\n      });\n      return;\n    }\n\n    setActiveCollectionId((prev) => prev ?? collections[0].id);\n    setInviteModalOpen(true);\n  }, [addToast, collections]);\n\n  const handleSendInvite = useCallback(async () => {\n    const email = inviteData.email.trim().toLowerCase();\n\n    if (!email) {\n      addToast({\n        type: 'error',\n        title: 'Invalid Email',\n        message: 'Please enter an email address to send an invite.',\n        duration: 4000\n      });\n      return;\n    }\n\n    if (!activeCollectionId) {\n      addToast({\n        type: 'error',\n        title: 'No Collection Selected',\n        message: 'Select a collection to share with your family.',\n        duration: 4000\n      });\n      return;\n    }\n\n    if (email === userEmail) {\n      addToast({\n        type: 'warning',\n        title: 'Cannot Invite Yourself',\n        message: 'Please enter a different email address.',\n        duration: 4000\n      });\n      return;\n    }\n\n    setIsSubmittingInvite(true);\n\n    try {\n      const result = await collaborativeMemoryService.inviteUserToCollection(\n        activeCollectionId,\n        email,\n        inviteData.permission,\n        inviteData.message.trim() || undefined\n      );\n\n      if (!result.success) {\n        throw new Error(result.error);\n      }\n\n      addToast({\n        type: 'success',\n        title: 'Invite Sent',\n        message: `Invitation sent to ${email}.`,\n        duration: 4000\n      });\n\n      setInviteData({ email: '', permission: 'view', message: '' });\n      setInviteModalOpen(false);\n      await loadCollaborationData();\n    } catch (error: any) {\n      console.error('Error sending invite:', error);\n      addToast({\n        type: 'error',\n        title: 'Invite Failed',\n        message: error?.message || 'Failed to send invitation.',\n        duration: 5000\n      });\n    } finally {\n      setIsSubmittingInvite(false);\n    }\n  }, [activeCollectionId, addToast, inviteData, loadCollaborationData, userEmail]);\n\n  const handleRespondToInvite = useCallback(\n    async (inviteId: string, action: 'accept' | 'decline') => {\n      setRespondingInviteId(inviteId);\n\n      try {\n        if (action === 'accept') {\n          const result = await collaborativeMemoryService.acceptCollaborationInvite(inviteId);\n          if (!result.success) {\n            throw new Error(result.error);\n          }\n\n          addToast({\n            type: 'success',\n            title: 'Invite Accepted',\n            message: 'You have successfully joined the collaborative collection.',\n            duration: 4000\n          });\n        } else {\n          const result = await collaborativeMemoryService.declineCollaborationInvite(inviteId);\n          if (!result.success) {\n            throw new Error(result.error);\n          }\n\n          addToast({\n            type: 'info',\n            title: 'Invite Declined',\n            message: 'You have declined the collaboration invitation.',\n            duration: 4000\n          });\n        }\n\n        await loadCollaborationData();\n      } catch (error: any) {\n        console.error(`Error ${action}ing invite:`, error);\n        addToast({\n          type: 'error',\n          title: `${action === 'accept' ? 'Accept' : 'Decline'} Failed`,\n          message: error?.message || `Failed to ${action} invitation.`,\n          duration: 5000\n        });\n      } finally {\n        setRespondingInviteId(null);\n      }\n    },\n    [addToast, loadCollaborationData]\n  );\n\n  const parseMemoryContent = useCallback(\n    (memory: Memory): ParsedMemoryContent => {\n      try {\n        const parsed = JSON.parse(memory.response);\n        if (parsed && typeof parsed === 'object' && 'mediaType' in parsed) {\n          const mediaType = ['image', 'video', 'document'].includes(parsed.mediaType)\n            ? parsed.mediaType\n            : 'document';\n\n          return {\n            caption: parsed.caption || memory.response,\n            mediaType,\n            preview: typeof parsed.preview === 'string' ? parsed.preview : undefined,\n            fileName: typeof parsed.fileName === 'string' ? parsed.fileName : undefined\n          };\n        }\n      } catch (error) {\n        // fallback to plain response\n      }\n\n      return {\n        caption: memory.response,\n        mediaType: 'text'\n      };\n    },\n    []\n  );\n\n  const handleFileProcessed = useCallback(\n    (fileData: ProcessedFileData) => {\n      setPendingUpload(fileData);\n      setUploadCaption('');\n    },\n    []\n  );\n\n  const handleUploadMemory = useCallback(async () => {\n    if (!userId) {\n      addToast({\n        type: 'error',\n        title: 'Not Signed In',\n        message: 'You must be signed in to upload memories.',\n        duration: 4000\n      });\n      return;\n    }\n\n    if (!pendingUpload) {\n      addToast({\n        type: 'error',\n        title: 'No File Selected',\n        message: 'Please choose a photo or video to upload.',\n        duration: 4000\n      });\n      return;\n    }\n\n    if (!selectedUploadCollectionId) {\n      addToast({\n        type: 'error',\n        title: 'Select a Collection',\n        message: 'Choose a collection to receive this memory.',\n        duration: 4000\n      });\n      return;\n    }\n\n    const targetCollection = editableCollections.find((collection) => collection.id === selectedUploadCollectionId);\n    if (!targetCollection) {\n      addToast({\n        type: 'error',\n        title: 'Permission Required',\n        message: 'You need edit access to upload to this collection.',\n        duration: 4000\n      });\n      return;\n    }\n\n    const captionValue = uploadCaption.trim() ? sanitizeTextInput(uploadCaption) : 'Shared family memory';\n    const payload = {\n      caption: captionValue,\n      mediaType: pendingUpload.type,\n      fileName: pendingUpload.metadata.name,\n      size: pendingUpload.metadata.size,\n      preview: pendingUpload.preview,\n      uploadedAt: new Date().toISOString(),\n      uploadedBy: user?.email || 'family'\n    };\n\n    const sanitized = sanitizeMemoryData({\n      prompt: `Family upload: ${pendingUpload.metadata.name}`,\n      response: JSON.stringify(payload),\n      type: 'visual',\n      tags: ['family-upload', pendingUpload.type]\n    });\n\n    setIsUploadingMemory(true);\n\n    try {\n      const { data: createdMemory, error } = await addMemory(\n        {\n          prompt: sanitized.prompt,\n          response: sanitized.response,\n          date: new Date().toISOString(),\n          type: sanitized.type,\n          tags: sanitized.tags\n        },\n        userId\n      );\n\n      if (error || !createdMemory?.id) {\n        throw new Error(error?.message || 'Unable to save memory');\n      }\n\n      const collectionResult = await collaborativeMemoryService.addMemoryToCollection(\n        selectedUploadCollectionId,\n        createdMemory.id\n      );\n\n      if (!collectionResult.success) {\n        throw new Error(collectionResult.error);\n      }\n\n      addToast({\n        type: 'success',\n        title: 'Memory Uploaded',\n        message: 'Your memory has been shared with the family collection.',\n        duration: 4000\n      });\n\n      setPendingUpload(null);\n      setUploadCaption('');\n      await loadCollaborationData();\n    } catch (error: any) {\n      console.error('Error uploading family memory:', error);\n      addToast({\n        type: 'error',\n        title: 'Upload Failed',\n        message: error?.message || 'Could not upload this memory. Please try again.',\n        duration: 5000\n      });\n    } finally {\n      setIsUploadingMemory(false);\n    }\n  }, [addToast, editableCollections, loadCollaborationData, pendingUpload, selectedUploadCollectionId, uploadCaption, user?.email, userId]);\n\n  // Render a collection card\n  const renderCollectionCard = (collection: CollectionWithDetails) => (\n    <div key={collection.id} className=\"bg-white/80 backdrop-blur-xl rounded-3xl p-6 shadow-xl border border-orange-100\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <div>\n          <h3 className=\"text-lg font-bold text-gray-800\">{collection.title}</h3>\n          {collection.description && (\n            <p className=\"text-sm text-gray-600 mt-1\">{collection.description}</p>\n          )}\n        </div>\n        <div className=\"text-xs text-gray-500\">\n          {collection.collaborators.length} collaborator{collection.collaborators.length === 1 ? '' : 's'}\n        </div>\n      </div>\n\n      {collection.memoryDetails.length === 0 ? (\n        <div className=\"bg-orange-50 rounded-2xl p-4 text-center\">\n          <p className=\"text-sm text-gray-600\">No memories yet. Add a memory to get started!</p>\n        </div>\n      ) : (\n        <div className=\"space-y-4\">\n          {collection.memoryDetails.map((memory) => {\n            const parsed = parseMemoryContent(memory);\n            return (\n              <div key={memory.id} className=\"rounded-2xl border border-orange-100 bg-orange-50/70 p-4\">\n                <p className=\"text-sm font-semibold text-gray-800 mb-1\">{memory.prompt}</p>\n                <div className=\"space-y-2\">\n                  <p className=\"text-sm text-gray-600\">{parsed.caption}</p>\n                  {parsed.mediaType === 'image' && parsed.preview && (\n                    <img\n                      src={parsed.preview}\n                      alt={parsed.fileName || 'Shared memory'}\n                      className=\"h-40 w-full rounded-2xl object-cover border border-white/60 shadow-inner\"\n                    />\n                  )}\n                  {parsed.mediaType === 'video' && parsed.preview && (\n                    <video\n                      controls\n                      src={parsed.preview}\n                      className=\"w-full rounded-2xl border border-white/60 shadow-inner\"\n                    >\n                      Your browser does not support the video tag.\n                    </video>\n                  )}\n                  {parsed.mediaType === 'document' && (\n                    <p className=\"text-xs text-gray-500\">Attachment: {parsed.fileName || 'Document'}</p>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"pt-6 space-y-6\">\n      <div className=\"flex items-center gap-4\">\n        <button\n          onClick={onBack}\n          className=\"w-10 h-10 bg-white/80 backdrop-blur-xl rounded-2xl flex items-center justify-center shadow-lg border border-orange-100\"\n        >\n          <ChevronLeft className=\"w-6 h-6 text-gray-700\" />\n        </button>\n        <h1 className=\"text-2xl font-bold text-gray-800\">Share Your Legacy</h1>\n      </div>\n\n      <div className=\"flex justify-end\">\n        <button\n          className=\"bg-gradient-to-r from-orange-500 to-rose-500 text-white font-bold py-2 px-6 rounded-2xl flex items-center gap-2 shadow-lg hover:shadow-xl transition-all disabled:opacity-60 disabled:cursor-not-allowed\"\n          onClick={handleOpenInvite}\n          disabled={collections.length === 0}\n        >\n          <Plus className=\"w-5 h-5\" />\n          <span>Invite Family</span>\n        </button>\n      </div>\n\n      {editableCollections.length > 0 ? (\n        <section className=\"bg-white/80 backdrop-blur-xl rounded-3xl p-6 shadow-xl border border-orange-100 space-y-4\">\n          <h2 className=\"text-xl font-bold text-gray-800\">Contribute a Memory</h2>\n          <p className=\"text-sm text-gray-600\">\n            Upload a photo or short video with a caption to share with your family collection.\n          </p>\n\n          <div className=\"grid gap-4 md:grid-cols-2\">\n            <div className=\"space-y-3\">\n              <label className=\"block text-sm font-medium text-gray-700\" htmlFor=\"upload-collection-select\">\n                Choose collection\n              </label>\n              <select\n                id=\"upload-collection-select\"\n                value={selectedUploadCollectionId ?? ''}\n                onChange={(event) => setSelectedUploadCollectionId(event.target.value || null)}\n                className=\"w-full rounded-2xl border border-orange-200 bg-white p-3 text-sm focus:border-orange-400 focus:ring-2 focus:ring-orange-100\"\n              >\n                {editableCollections.map((collection) => (\n                  <option key={collection.id} value={collection.id}>\n                    {collection.title}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"space-y-3\">\n              <label className=\"block text-sm font-medium text-gray-700\" htmlFor=\"upload-caption\">\n                Caption (Optional)\n              </label>\n              <textarea\n                id=\"upload-caption\"\n                value={uploadCaption}\n                onChange={(event) => setUploadCaption(event.target.value)}\n                className=\"w-full rounded-2xl border border-orange-200 bg-white p-3 text-sm focus:border-orange-400 focus:ring-2 focus:ring-orange-100\"\n                rows={2}\n                placeholder=\"Add a short caption or memory description...\"\n              />\n            </div>\n          </div>\n\n          <FileUpload\n            onFileProcessed={handleFileProcessed}\n            acceptedTypes={['image/*', '.pdf', '.txt', 'video/*']}\n            maxFileSize={20}\n            multiple={false}\n          />\n\n          {pendingUpload && (\n            <div className=\"space-y-4\">\n              <div className=\"rounded-2xl border border-orange-200 bg-orange-50 p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <h3 className=\"font-semibold text-gray-800\">Ready to Upload</h3>\n                  <button\n                    onClick={() => setPendingUpload(null)}\n                    className=\"text-gray-500 hover:text-red-500\"\n                  >\n                    <X className=\"w-5 h-5\" />\n                  </button>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  {pendingUpload.preview && (\n                    <img\n                      src={pendingUpload.preview}\n                      alt=\"Preview\"\n                      className=\"w-16 h-16 rounded-lg object-cover border border-orange-200\"\n                    />\n                  )}\n                  <div className=\"flex-1 min-w-0\">\n                    <p className=\"font-medium text-gray-800 truncate\">{pendingUpload.metadata.name}</p>\n                    <p className=\"text-sm text-gray-500\">\n                      {(pendingUpload.metadata.size / 1024 / 1024).toFixed(2)} MB\n                    </p>\n                  </div>\n                </div>\n                <textarea\n                  id=\"upload-caption\"\n                  value={uploadCaption}\n                  onChange={(event) => setUploadCaption(event.target.value)}\n                  className=\"w-full rounded-2xl border border-orange-200 bg-white p-3 text-sm focus:border-orange-400 focus:ring-2 focus:ring-orange-100 mt-3\"\n                  rows={2}\n                  placeholder=\"Add a short caption or memory description...\"\n                />\n              </div>\n              <button\n                onClick={handleUploadMemory}\n                className=\"w-full rounded-2xl bg-gradient-to-r from-orange-500 to-rose-500 py-3 text-sm font-semibold text-white shadow-lg hover:shadow-xl transition-all disabled:opacity-60 disabled:cursor-not-allowed\"\n                disabled={isUploadingMemory}\n              >\n                {isUploadingMemory ? (\n                  <span className=\"flex items-center justify-center gap-2\">\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\n                    Uploading...\n                  </span>\n                ) : (\n                  'Share Memory'\n                )}\n              </button>\n            </div>\n          )}\n        </section>\n      ) : (\n        <section className=\"bg-white/80 backdrop-blur-xl rounded-3xl p-6 shadow-xl border border-orange-100\">\n          <h2 className=\"text-xl font-bold text-gray-800 mb-2\">Contribute a Memory</h2>\n          <p className=\"text-sm text-gray-600\">\n            You currently have view-only access. Ask a collection owner to grant edit permissions so you can upload memories.\n          </p>\n        </section>\n      )}\n\n      {loading ? (\n        <div className=\"flex justify-center py-10\">\n          <Loader2 className=\"h-6 w-6 animate-spin text-orange-500\" />\n        </div>\n      ) : (\n        <>\n          <section className=\"bg-white/80 backdrop-blur-xl rounded-3xl p-6 shadow-xl border border-orange-100\">\n            <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Invitations for You</h2>\n            {incomingInvites.length === 0 ? (\n              <p className=\"text-sm text-gray-600\">No pending invitations.</p>\n            ) : (\n              <div className=\"space-y-3\">\n                {incomingInvites.map((invite) => (\n                  <div key={invite.id} className=\"rounded-2xl border border-orange-100 bg-orange-50/70 p-4\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div>\n                        <p className=\"font-semibold text-gray-800\">{invite.collaborative_collections?.title || 'Shared Collection'}</p>\n                        <p className=\"text-xs text-gray-500\">Invited by {invite.inviter?.full_name || 'a family member'}</p>\n                      </div>\n                      <p className=\"text-xs text-gray-500\">Expires {new Date(invite.expires_at).toLocaleDateString()}</p>\n                    </div>\n                    <div className=\"flex gap-2\">\n                      <button\n                        className=\"flex items-center gap-2 rounded-xl bg-green-500 px-4 py-2 text-sm font-semibold text-white hover:bg-green-600 transition-colors disabled:opacity-60 disabled:cursor-not-allowed\"\n                        onClick={() => handleRespondToInvite(invite.id, 'accept')}\n                        disabled={respondingInviteId === invite.id}\n                      >\n                        {respondingInviteId === invite.id ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <UserPlus className=\"h-4 w-4\" />}\n                        Accept\n                      </button>\n                      <button\n                        className=\"flex items-center gap-2 rounded-xl bg-gray-500 px-4 py-2 text-sm font-semibold text-white hover:bg-gray-600 transition-colors disabled:opacity-60 disabled:cursor-not-allowed\"\n                        onClick={() => handleRespondToInvite(invite.id, 'decline')}\n                        disabled={respondingInviteId === invite.id}\n                      >\n                        {respondingInviteId === invite.id ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <X className=\"h-4 w-4\" />}\n                        Decline\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </section>\n\n          <section className=\"bg-white/80 backdrop-blur-xl rounded-3xl p-6 shadow-xl border border-orange-100\">\n            <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Invitations You Sent</h2>\n            {sentInvites.length === 0 ? (\n              <p className=\"text-sm text-gray-600\">You haven't invited anyone yet.</p>\n            ) : (\n              <div className=\"space-y-3\">\n                {sentInvites.map((invite) => (\n                  <div key={invite.id} className=\"rounded-2xl border border-orange-100 bg-white p-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-3\">\n                        <Mail className=\"h-5 w-5 text-blue-500\" />\n                        <div>\n                          <p className=\"text-sm font-semibold text-gray-800\">{invite.invited_user_email}</p>\n                          <p className=\"text-xs text-gray-500\">{(invite as any).collaborative_collections?.title || 'Shared Collection'}</p>\n                        </div>\n                      </div>\n                      <span className=\"text-xs text-gray-500 uppercase\">{invite.status}</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </section>\n\n          <section className=\"space-y-4\">\n            <h2 className=\"text-xl font-bold text-gray-800\">Collaborative Collections</h2>\n            {collections.length === 0 ? (\n              <div className=\"bg-white/80 backdrop-blur-xl rounded-3xl p-8 text-center shadow-lg border border-orange-100\">\n                <div className=\"text-5xl mb-4\">👨‍👩‍👧‍👦</div>\n                <h3 className=\"text-xl font-bold text-gray-800 mb-2\">No Collections Yet</h3>\n                <p className=\"text-gray-600 mb-4\">Create a collection to start collaborating with family.</p>\n                <button\n                  onClick={() => setInviteModalOpen(true)}\n                  className=\"py-3 px-6 bg-gradient-to-r from-orange-500 to-rose-500 text-white rounded-2xl font-semibold shadow-lg hover:shadow-xl transition-all\"\n                >\n                  Create Collection\n                </button>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">{collections.map(renderCollectionCard)}</div>\n            )}\n          </section>\n\n          <section className=\"space-y-4\">\n            <h2 className=\"text-xl font-bold text-gray-800\">Memories Shared With You</h2>\n            {sharedMemories.length === 0 ? (\n              <div className=\"bg-white/80 backdrop-blur-xl rounded-3xl p-8 text-center shadow-lg border border-orange-100\">\n                <div className=\"text-5xl mb-4\">📸</div>\n                <h3 className=\"text-xl font-bold text-gray-800 mb-2\">No Shared Memories</h3>\n                <p className=\"text-gray-600 mb-4\">When someone shares a memory with you it will appear here.</p>\n              </div>\n            ) : (\n              <div className=\"space-y-3\">\n                {sharedMemories.map((shared) => {\n                  const parsed = parseMemoryContent(shared.memory);\n                  return (\n                    <div key={shared.id} className=\"rounded-2xl border border-orange-100 bg-white/80 p-5 shadow\">\n                      <div className=\"flex items-center justify-between mb-3\">\n                        <div>\n                          <p className=\"font-semibold text-gray-800\">{shared.memory.prompt}</p>\n                          <p className=\"text-xs text-gray-500\">Permission: {shared.permission_level}</p>\n                        </div>\n                        <span className=\"text-xs text-gray-500\">{new Date(shared.shared_at).toLocaleDateString()}</span>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <p className=\"text-sm text-gray-700\">{parsed.caption}</p>\n                        {parsed.mediaType === 'image' && parsed.preview && (\n                          <img\n                            src={parsed.preview}\n                            alt={parsed.fileName || 'Shared memory'}\n                            className=\"h-40 w-full rounded-2xl object-cover border border-white/60 shadow-inner\"\n                          />\n                        )}\n                        {parsed.mediaType === 'video' && parsed.preview && (\n                          <video\n                            controls\n                            src={parsed.preview}\n                            className=\"w-full rounded-2xl border border-white/60 shadow-inner\"\n                          >\n                            Your browser does not support the video tag.\n                          </video>\n                        )}\n                        {parsed.mediaType === 'document' && (\n                          <p className=\"text-xs text-gray-500\">Attachment: {parsed.fileName || 'Document'}</p>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n      </section>\n        </>\n      )}\n\n      {inviteModalOpen && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/40 backdrop-blur-sm px-4\">\n          <div className=\"relative w-full max-w-lg rounded-3xl bg-white p-6 shadow-2xl\">\n            <button\n              onClick={() => setInviteModalOpen(false)}\n              className=\"absolute right-4 top-4 rounded-full border border-gray-200 p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-50 transition-colors\"\n              aria-label=\"Close invite dialog\"\n            >\n              <X className=\"w-4 h-4\" />\n            </button>\n            <h2 className=\"text-xl font-bold text-gray-800 mb-2\">Invite a family member</h2>\n            <p className=\"text-sm text-gray-600 mb-4\">Share your memories with the people who matter most.</p>\n\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\" htmlFor=\"collection-select\">Collection</label>\n                <select\n                  id=\"collection-select\"\n                  value={activeCollectionId ?? ''}\n                  onChange={(event) => setActiveCollectionId(event.target.value || null)}\n                  className=\"w-full rounded-2xl border border-orange-200 bg-white p-3 text-sm focus:border-orange-400 focus:ring-2 focus:ring-orange-100\"\n                >\n                  {collections.map((collection) => (\n                    <option key={collection.id} value={collection.id}>\n                      {collection.title}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\" htmlFor=\"invite-email\">Email address</label>\n                <input\n                  id=\"invite-email\"\n                  type=\"email\"\n                  value={inviteData.email}\n                  onChange={(event) => setInviteData((prev) => ({ ...prev, email: event.target.value }))}\n                  className=\"w-full rounded-2xl border border-orange-200 bg-white p-3 text-sm focus:border-orange-400 focus:ring-2 focus:ring-orange-100\"\n                  placeholder=\"family@example.com\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\" htmlFor=\"permission-level\">Permission level</label>\n                <select\n                  id=\"permission-level\"\n                  value={inviteData.permission}\n                  onChange={(event) => setInviteData((prev) => ({ ...prev, permission: event.target.value as 'view' | 'edit' }))}\n                  className=\"w-full rounded-2xl border border-orange-200 bg-white p-3 text-sm focus:border-orange-400 focus:ring-2 focus:ring-orange-100\"\n                >\n                  <option value=\"view\">View only</option>\n                  <option value=\"edit\">Can contribute</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\" htmlFor=\"invite-message\">Message (optional)</label>\n                <textarea\n                  id=\"invite-message\"\n                  value={inviteData.message}\n                  onChange={(event) => setInviteData((prev) => ({ ...prev, message: event.target.value }))}\n                  className=\"w-full rounded-2xl border border-orange-200 bg-white p-3 text-sm focus:border-orange-400 focus:ring-2 focus:ring-orange-100\"\n                  rows={3}\n                  placeholder=\"Add a personal message to your invitation...\"\n                />\n              </div>\n\n              <div className=\"flex gap-3 pt-2\">\n                <button\n                  className=\"flex-1 py-3 rounded-2xl font-bold border border-gray-300 text-gray-700 hover:bg-gray-50 transition-all\"\n                  onClick={() => setInviteModalOpen(false)}\n                >\n                  Cancel\n                </button>\n                <button\n                  className=\"flex-1 py-3 rounded-2xl font-bold bg-gradient-to-r from-orange-500 to-rose-500 text-white shadow-lg hover:shadow-xl transition-all disabled:opacity-60 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\n                  onClick={handleSendInvite}\n                  disabled={isSubmittingInvite}\n                >\n                  {isSubmittingInvite ? (\n                    <>\n                      <Loader2 className=\"h-4 w-4 animate-spin\" />\n                      Sending...\n                    </>\n                  ) : (\n                    'Send Invite'\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default InviteCollaborate;"],"names":["InviteCollaborate","onBack","user","useAuth","addToast","useError","userId","userEmail","collections","setCollections","useState","sharedMemories","setSharedMemories","sentInvites","setSentInvites","incomingInvites","setIncomingInvites","loading","setLoading","activeCollectionId","setActiveCollectionId","inviteModalOpen","setInviteModalOpen","inviteData","setInviteData","isSubmittingInvite","setIsSubmittingInvite","respondingInviteId","setRespondingInviteId","selectedUploadCollectionId","setSelectedUploadCollectionId","pendingUpload","setPendingUpload","uploadCaption","setUploadCaption","isUploadingMemory","setIsUploadingMemory","editableCollections","useMemo","collection","permission","_a","useEffect","supabase","collectionsSubscription","payload","loadCollaborationData","newCollection","invitesSubscription","newInvite","sharedMemoriesSubscription","useCallback","collectionsRes","sharedRes","sentRes","incomingRes","collaborativeMemoryService","rawCollections","allMemoryIds","memoryMap","memoryRes","memory","collectionsWithDetails","_b","memoryId","prev","sharedDetails","item","error","handleOpenInvite","handleSendInvite","email","result","handleRespondToInvite","inviteId","action","parseMemoryContent","parsed","mediaType","handleFileProcessed","fileData","handleUploadMemory","sanitizeTextInput","sanitized","sanitizeMemoryData","createdMemory","addMemory","collectionResult","renderCollectionCard","jsxs","jsx","ChevronLeft","Plus","event","FileUpload","X","Loader2","Fragment","invite","UserPlus","Mail","shared"],"mappings":"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"}