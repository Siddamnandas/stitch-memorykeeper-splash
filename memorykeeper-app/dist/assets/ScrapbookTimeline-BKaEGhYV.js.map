{"version":3,"mappings":"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","names":["ScrapbookTimeline","onBack","state","useAppState","searchQuery","setSearchQuery","useState","filterType","setFilterType","filterDecade","setFilterDecade","filterPeople","setFilterPeople","sortBy","setSortBy","isExporting","setIsExporting","exportType","setExportType","visualTheme","setVisualTheme","memories","useMemo","memory","index","year","decade","tags","people","tag","decades","m","b","allPeople","filteredMemories","a","dateA","dateB","groupedMemories","groups","getMediaTypeIcon","type","jsx","Image","Type","Mic","Palette","getMediaTypeLabel","getVisualThemeClass","exportAsPDF","jsPDF","html2canvas","__vitePreload","n","doc","dateStr","yPosition","group","descriptionLines","error","exportAsAudio","audioMemories","showExportOptions","jsxs","ChevronLeft","Search","e","Filter","person","theme","Calendar","User","MapPin","Heart","Share2","Edit","Fragment","Download"],"ignoreList":[],"sources":["../../src/components/ScrapbookTimeline.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { ChevronLeft, Image, Type, Mic, Palette, Search, Heart, Share2, Edit, Calendar, User, MapPin, Filter, Download, FileAudio, FileText } from 'lucide-react';\nimport { useAppState } from '../lib/AppStateContext';\n\ninterface Memory {\n  id: string;\n  title: string;\n  date: string;\n  type: 'photo' | 'text' | 'audio' | 'ai-generated';\n  image?: string;\n  description: string;\n  tags: string[];\n  decade: string;\n  people: string[];\n  location?: string;\n  favorite: boolean;\n  comments: number;\n  shares: number;\n}\n\ninterface ScrapbookTimelineProps {\n  onBack: () => void;\n}\n\nconst ScrapbookTimeline: React.FC<ScrapbookTimelineProps> = ({ onBack }) => {\n  const { state } = useAppState();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filterType, setFilterType] = useState<'all' | 'photo' | 'text' | 'audio' | 'ai-generated'>('all');\n  const [filterDecade, setFilterDecade] = useState<'all' | string>('all');\n  const [filterPeople, setFilterPeople] = useState<'all' | string>('all');\n  const [sortBy, setSortBy] = useState<'newest' | 'oldest'>('newest');\n  const [isExporting, setIsExporting] = useState(false);\n  const [exportType, setExportType] = useState<'pdf' | 'audio' | null>(null);\n  const [visualTheme, setVisualTheme] = useState<'none' | 'sepia' | 'vintage' | 'black-and-white'>('none');\n\n  // Convert app state memories to scrapbook format\n  const memories: Memory[] = useMemo(() => {\n    return state.memories.map((memory, index) => {\n      // Extract decade from date\n      const year = new Date(memory.date).getFullYear();\n      const decade = `${Math.floor(year / 10) * 10}s`;\n      \n      // Extract tags from memory\n      const tags = memory.tags || [];\n      \n      // Extract people from tags (simplified logic)\n      const people = tags.filter(tag => \n        tag.toLowerCase().includes('family') || \n        tag.toLowerCase().includes('friend') ||\n        tag.toLowerCase().includes('mom') ||\n        tag.toLowerCase().includes('dad') ||\n        tag.toLowerCase().includes('child')\n      );\n      \n      return {\n        id: memory.id || `memory-${index}`, // Ensure ID is always a string\n        title: memory.prompt || `Memory ${index + 1}`,\n        date: memory.date,\n        type: memory.type as 'photo' | 'text' | 'audio' | 'ai-generated',\n        image: memory.type === 'photo' || memory.type === 'ai-generated' ? 'https://placehold.co/300x200/ee862b/ffffff?text=Memory+Photo' : undefined,\n        description: memory.response,\n        tags,\n        decade,\n        people,\n        favorite: index % 5 === 0, // Every 5th memory is favorited for demo\n        comments: Math.floor(Math.random() * 10),\n        shares: Math.floor(Math.random() * 5)\n      };\n    });\n  }, [state.memories]);\n\n  // Get unique decades for filter\n  const decades = useMemo(() => {\n    const uniqueDecades = [...new Set(memories.map(m => m.decade))];\n    return uniqueDecades.sort((a, b) => b.localeCompare(a)); // Newest first\n  }, [memories]);\n\n  // Get unique people for filter\n  const people = useMemo(() => {\n    const allPeople = memories.flatMap(m => m.people);\n    const uniquePeople = [...new Set(allPeople)];\n    return uniquePeople;\n  }, [memories]);\n\n  // Filter and sort memories\n  const filteredMemories = useMemo(() => {\n    return memories.filter(memory => {\n      // Search filter\n      if (searchQuery && \n          !memory.title.toLowerCase().includes(searchQuery.toLowerCase()) &&\n          !memory.description.toLowerCase().includes(searchQuery.toLowerCase()) &&\n          !memory.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()))) {\n        return false;\n      }\n      \n      // Type filter\n      if (filterType !== 'all' && memory.type !== filterType) {\n        return false;\n      }\n      \n      // Decade filter\n      if (filterDecade !== 'all' && memory.decade !== filterDecade) {\n        return false;\n      }\n      \n      // People filter\n      if (filterPeople !== 'all' && !memory.people.includes(filterPeople)) {\n        return false;\n      }\n      \n      return true;\n    }).sort((a, b) => {\n      const dateA = new Date(a.date).getTime();\n      const dateB = new Date(b.date).getTime();\n      \n      if (sortBy === 'newest') {\n        return dateB - dateA;\n      } else {\n        return dateA - dateB;\n      }\n    });\n  }, [memories, searchQuery, filterType, filterDecade, filterPeople, sortBy]);\n\n  // Group memories by decade\n  const groupedMemories = useMemo(() => {\n    const groups: Record<string, Memory[]> = {};\n    \n    filteredMemories.forEach(memory => {\n      if (!groups[memory.decade]) {\n        groups[memory.decade] = [];\n      }\n      groups[memory.decade].push(memory);\n    });\n    \n    // Sort decades\n    const sortedDecades = Object.keys(groups).sort((a, b) => {\n      if (sortBy === 'newest') {\n        return b.localeCompare(a);\n      } else {\n        return a.localeCompare(b);\n      }\n    });\n    \n    return sortedDecades.map(decade => ({\n      decade,\n      memories: groups[decade]\n    }));\n  }, [filteredMemories, sortBy]);\n\n  // Get media type icon\n  const getMediaTypeIcon = (type: Memory['type']) => {\n    switch (type) {\n      case 'photo': return <Image className=\"w-4 h-4\" />;\n      case 'text': return <Type className=\"w-4 h-4\" />;\n      case 'audio': return <Mic className=\"w-4 h-4\" />;\n      case 'ai-generated': return <Palette className=\"w-4 h-4\" />;\n      default: return <Type className=\"w-4 h-4\" />;\n    }\n  };\n\n  // Get media type label\n  const getMediaTypeLabel = (type: Memory['type']) => {\n    switch (type) {\n      case 'photo': return 'Photo';\n      case 'text': return 'Text';\n      case 'audio': return 'Audio';\n      case 'ai-generated': return 'AI Image';\n      default: return 'Text';\n    }\n  };\n\n  // Get visual theme class\n  const getVisualThemeClass = () => {\n    switch (visualTheme) {\n      case 'sepia': return 'sepia-filter';\n      case 'vintage': return 'vintage-filter';\n      case 'black-and-white': return 'grayscale-filter';\n      default: return '';\n    }\n  };\n\n  // Export as PDF\n  const exportAsPDF = async () => {\n    setIsExporting(true);\n    setExportType('pdf');\n\n    try {\n      // Dynamically import jsPDF and html2canvas\n      const [{ jsPDF }, html2canvas] = await Promise.all([\n        import('jspdf'),\n        import('html2canvas')\n      ]);\n\n      // Create a new jsPDF instance\n      const doc = new jsPDF({\n        orientation: 'portrait',\n        unit: 'px',\n        format: 'a4'\n      });\n      \n      // Add title\n      doc.setFontSize(22);\n      doc.text('MemoryKeeper Scrapbook', 20, 30);\n      \n      // Add date\n      const dateStr = new Date().toLocaleDateString();\n      doc.setFontSize(12);\n      doc.text(`Exported on: ${dateStr}`, 20, 50);\n      \n      // Add memories\n      let yPosition = 70;\n      \n      for (const group of groupedMemories) {\n        // Add decade header\n        doc.setFontSize(16);\n        doc.setTextColor(255, 140, 0); // Orange color\n        doc.text(group.decade, 20, yPosition);\n        yPosition += 20;\n        \n        for (const memory of group.memories) {\n          // Add memory title\n          doc.setFontSize(14);\n          doc.setTextColor(0, 0, 0); // Black color\n          doc.text(memory.title, 20, yPosition);\n          yPosition += 15;\n          \n          // Add date\n          doc.setFontSize(10);\n          doc.setTextColor(100, 100, 100); // Gray color\n          doc.text(new Date(memory.date).toLocaleDateString(), 20, yPosition);\n          yPosition += 15;\n          \n          // Add description\n          doc.setFontSize(12);\n          doc.setTextColor(0, 0, 0); // Black color\n          const descriptionLines = doc.splitTextToSize(memory.description, 400);\n          doc.text(descriptionLines, 20, yPosition);\n          yPosition += descriptionLines.length * 15;\n          \n          // Add spacing\n          yPosition += 20;\n          \n          // Check if we need a new page\n          if (yPosition > 700) {\n            doc.addPage();\n            yPosition = 30;\n          }\n        }\n      }\n      \n      // Save the PDF\n      doc.save(`MemoryKeeper_Scrapbook_${dateStr.replace(/\\//g, '-')}.pdf`);\n    } catch (error) {\n      console.error('Error exporting PDF:', error);\n      alert('Error exporting PDF. Please try again.');\n    } finally {\n      setIsExporting(false);\n      setExportType(null);\n    }\n  };\n\n  // Export as audio compilation\n  const exportAsAudio = async () => {\n    setIsExporting(true);\n    setExportType('audio');\n    \n    try {\n      // Filter audio memories\n      const audioMemories = filteredMemories.filter(memory => memory.type === 'audio');\n      \n      if (audioMemories.length === 0) {\n        alert('No audio memories found to export.');\n        return;\n      }\n      \n      // In a real implementation, we would compile the audio files here\n      // For this demo, we'll just show a message\n      alert(`Audio compilation would include ${audioMemories.length} audio memories. In a full implementation, this would create an audio file with all your voice recordings.`);\n    } catch (error) {\n      console.error('Error exporting audio:', error);\n      alert('Error exporting audio compilation. Please try again.');\n    } finally {\n      setIsExporting(false);\n      setExportType(null);\n    }\n  };\n\n  // Show export options\n  const showExportOptions = () => {\n    const exportOptions = [\n      { type: 'pdf', label: 'Export as PDF', icon: <FileText className=\"w-5 h-5\" /> },\n      { type: 'audio', label: 'Export Audio Compilation', icon: <FileAudio className=\"w-5 h-5\" /> }\n    ];\n    \n    const choice = window.confirm(\n      'Choose export format:\\n\\n' +\n      '1. PDF - Export all memories as a printable document\\n' +\n      '2. Audio Compilation - Export all audio memories as a single file\\n\\n' +\n      'Press OK for PDF, Cancel for Audio Compilation'\n    );\n    \n    if (choice) {\n      exportAsPDF();\n    } else {\n      exportAsAudio();\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gradient-to-br from-amber-50 via-orange-50 to-rose-50 font-display\">\n      <style>{`\n        .sepia-filter {\n          filter: sepia(80%) contrast(1.2) brightness(0.7);\n        }\n        .vintage-filter {\n          filter: sepia(50%) contrast(1.2) brightness(0.9) saturate(1.5);\n          border: 8px solid #8B4513;\n          border-radius: 8px;\n        }\n        .grayscale-filter {\n          filter: grayscale(100%);\n        }\n      `}</style>\n      \n      <main className=\"flex-grow p-4\">\n        <header className=\"flex items-center mb-6\">\n          <button\n            className=\"w-10 h-10 bg-white/80 backdrop-blur-xl rounded-2xl flex items-center justify-center shadow-lg border border-orange-100\"\n            onClick={onBack}\n          >\n            <ChevronLeft className=\"w-6 h-6 text-gray-700\" />\n          </button>\n          <h1 className=\"text-2xl font-bold text-center flex-1 pr-10 text-gray-800\">Scrapbook Timeline</h1>\n        </header>\n        \n        {/* Search and Filter Bar */}\n        <div className=\"bg-white/80 backdrop-blur-xl rounded-3xl shadow-xl border border-orange-100 p-4 mb-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <div className=\"relative flex-1\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search memories...\"\n                className=\"w-full pl-10 pr-4 py-2 bg-orange-50/50 backdrop-blur-xl border border-orange-200 rounded-xl text-gray-800 shadow-sm focus:outline-none focus:ring-2 focus:ring-orange-300\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n              />\n            </div>\n            <button className=\"p-2 bg-orange-100 rounded-xl text-orange-700 hover:bg-orange-200\">\n              <Filter className=\"w-5 h-5\" />\n            </button>\n          </div>\n          \n          {/* Advanced Filters */}\n          <div className=\"grid grid-cols-2 gap-3 mb-4\">\n            <div>\n              <label className=\"block text-xs font-medium mb-1 text-gray-700\">Type</label>\n              <select\n                className=\"w-full bg-orange-50/50 backdrop-blur-xl border border-orange-200 rounded-xl p-2 text-gray-800 shadow-sm text-sm\"\n                value={filterType}\n                onChange={(e) => setFilterType(e.target.value as any)}\n              >\n                <option value=\"all\">All Types</option>\n                <option value=\"photo\">Photos</option>\n                <option value=\"text\">Text</option>\n                <option value=\"audio\">Audio</option>\n                <option value=\"ai-generated\">AI Images</option>\n              </select>\n            </div>\n            \n            <div>\n              <label className=\"block text-xs font-medium mb-1 text-gray-700\">Decade</label>\n              <select\n                className=\"w-full bg-orange-50/50 backdrop-blur-xl border border-orange-200 rounded-xl p-2 text-gray-800 shadow-sm text-sm\"\n                value={filterDecade}\n                onChange={(e) => setFilterDecade(e.target.value)}\n              >\n                <option value=\"all\">All Decades</option>\n                {decades.map(decade => (\n                  <option key={decade} value={decade}>{decade}</option>\n                ))}\n              </select>\n            </div>\n            \n            <div>\n              <label className=\"block text-xs font-medium mb-1 text-gray-700\">People</label>\n              <select\n                className=\"w-full bg-orange-50/50 backdrop-blur-xl border border-orange-200 rounded-xl p-2 text-gray-800 shadow-sm text-sm\"\n                value={filterPeople}\n                onChange={(e) => setFilterPeople(e.target.value)}\n              >\n                <option value=\"all\">All People</option>\n                {people.map(person => (\n                  <option key={person} value={person}>{person}</option>\n                ))}\n              </select>\n            </div>\n            \n            <div>\n              <label className=\"block text-xs font-medium mb-1 text-gray-700\">Sort by</label>\n              <select\n                className=\"w-full bg-orange-50/50 backdrop-blur-xl border border-orange-200 rounded-xl p-2 text-gray-800 shadow-sm text-sm\"\n                value={sortBy}\n                onChange={(e) => setSortBy(e.target.value as any)}\n              >\n                <option value=\"newest\">Newest First</option>\n                <option value=\"oldest\">Oldest First</option>\n              </select>\n            </div>\n          </div>\n          \n          {/* Visual Theme Filter */}\n          <div className=\"mb-4\">\n            <label className=\"block text-xs font-medium mb-1 text-gray-700\">Visual Theme</label>\n            <div className=\"flex gap-2\">\n              {(['none', 'sepia', 'vintage', 'black-and-white'] as const).map((theme) => (\n                <button\n                  key={theme}\n                  className={`px-3 py-1 rounded-full text-xs font-medium transition-colors ${\n                    visualTheme === theme\n                      ? 'bg-orange-500 text-white'\n                      : 'bg-orange-100 text-orange-800 hover:bg-orange-200'\n                  }`}\n                  onClick={() => setVisualTheme(theme)}\n                >\n                  {theme === 'none' ? 'Default' : theme.charAt(0).toUpperCase() + theme.slice(1)}\n                </button>\n              ))}\n            </div>\n          </div>\n          \n          {/* Active Filters */}\n          {(searchQuery || filterType !== 'all' || filterDecade !== 'all' || filterPeople !== 'all' || visualTheme !== 'none') && (\n            <div className=\"flex flex-wrap gap-2 mb-3\">\n              {searchQuery && (\n                <span className=\"px-3 py-1 bg-orange-100 text-orange-800 rounded-full text-xs flex items-center gap-1\">\n                  <Search className=\"w-3 h-3\" />\n                  {searchQuery}\n                  <button \n                    onClick={() => setSearchQuery('')}\n                    className=\"ml-1 hover:text-orange-900\"\n                  >\n                    ×\n                  </button>\n                </span>\n              )}\n              {filterType !== 'all' && (\n                <span className=\"px-3 py-1 bg-orange-100 text-orange-800 rounded-full text-xs flex items-center gap-1\">\n                  {getMediaTypeIcon(filterType)}\n                  {getMediaTypeLabel(filterType)}\n                  <button \n                    onClick={() => setFilterType('all')}\n                    className=\"ml-1 hover:text-orange-900\"\n                  >\n                    ×\n                  </button>\n                </span>\n              )}\n              {filterDecade !== 'all' && (\n                <span className=\"px-3 py-1 bg-orange-100 text-orange-800 rounded-full text-xs flex items-center gap-1\">\n                  <Calendar className=\"w-3 h-3\" />\n                  {filterDecade}\n                  <button \n                    onClick={() => setFilterDecade('all')}\n                    className=\"ml-1 hover:text-orange-900\"\n                  >\n                    ×\n                  </button>\n                </span>\n              )}\n              {filterPeople !== 'all' && (\n                <span className=\"px-3 py-1 bg-orange-100 text-orange-800 rounded-full text-xs flex items-center gap-1\">\n                  <User className=\"w-3 h-3\" />\n                  {filterPeople}\n                  <button \n                    onClick={() => setFilterPeople('all')}\n                    className=\"ml-1 hover:text-orange-900\"\n                  >\n                    ×\n                  </button>\n                </span>\n              )}\n              {visualTheme !== 'none' && (\n                <span className=\"px-3 py-1 bg-orange-100 text-orange-800 rounded-full text-xs flex items-center gap-1\">\n                  <Palette className=\"w-3 h-3\" />\n                  {visualTheme.charAt(0).toUpperCase() + visualTheme.slice(1)}\n                  <button \n                    onClick={() => setVisualTheme('none')}\n                    className=\"ml-1 hover:text-orange-900\"\n                  >\n                    ×\n                  </button>\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n        \n        {/* Memories Grouped by Decade */}\n        <div className=\"space-y-8\">\n          {groupedMemories.map(({ decade, memories }) => (\n            <div key={decade}>\n              <h2 className=\"text-xl font-bold text-gray-800 mb-4 flex items-center gap-2\">\n                <MapPin className=\"w-5 h-5 text-orange-500\" />\n                {decade}: Memories\n              </h2>\n              \n              <div className=\"grid grid-cols-1 gap-4\">\n                {memories.map((memory) => (\n                  <div key={memory.id} className=\"p-4 bg-white/80 backdrop-blur-xl rounded-2xl border border-orange-100 shadow-lg hover:shadow-xl transition-shadow\">\n                    <div className=\"flex justify-between items-start mb-3\">\n                      <h3 className=\"font-bold text-lg text-gray-800\">{memory.title}</h3>\n                      <div className=\"flex items-center gap-2\">\n                        {memory.favorite && (\n                          <Heart className=\"w-5 h-5 text-red-500 fill-current\" />\n                        )}\n                        <span className=\"text-sm text-gray-600\">{new Date(memory.date).toLocaleDateString()}</span>\n                      </div>\n                    </div>\n                    \n                    {memory.image && (\n                      <img\n                        alt={memory.title}\n                        className={`w-full h-48 object-cover rounded-xl mb-3 shadow-md ${getVisualThemeClass()}`}\n                        src={memory.image}\n                      />\n                    )}\n                    \n                    <p className=\"mb-3 text-gray-700 line-clamp-2\">{memory.description}</p>\n                    \n                    {/* Tags */}\n                    <div className=\"flex flex-wrap gap-2 mb-3\">\n                      {memory.tags.map((tag, index) => (\n                        <span \n                          key={index} \n                          className=\"px-2 py-1 bg-amber-100 text-amber-800 rounded-full text-xs\"\n                        >\n                          {tag}\n                        </span>\n                      ))}\n                    </div>\n                    \n                    {/* People */}\n                    {memory.people.length > 0 && (\n                      <div className=\"flex items-center gap-2 mb-3 text-sm text-gray-600\">\n                        <User className=\"w-4 h-4\" />\n                        <span>{memory.people.join(', ')}</span>\n                      </div>\n                    )}\n                    \n                    <div className=\"flex justify-between items-center\">\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"px-3 py-1 bg-gradient-to-r from-orange-100 to-amber-100 text-orange-700 rounded-full text-sm font-medium flex items-center gap-1\">\n                          {getMediaTypeIcon(memory.type)}\n                          {getMediaTypeLabel(memory.type)}\n                        </span>\n                        <div className=\"flex items-center gap-3 text-xs text-gray-500\">\n                          <span className=\"flex items-center gap-1\">\n                            <Heart className=\"w-3 h-3\" />\n                            {memory.comments}\n                          </span>\n                          <span className=\"flex items-center gap-1\">\n                            <Share2 className=\"w-3 h-3\" />\n                            {memory.shares}\n                          </span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex gap-2\">\n                        <button className=\"p-2 text-orange-600 hover:bg-orange-100 rounded-xl\">\n                          <Edit className=\"w-4 h-4\" />\n                        </button>\n                        <button className=\"p-2 text-orange-600 hover:bg-orange-100 rounded-xl\">\n                          <Share2 className=\"w-4 h-4\" />\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n          \n          {groupedMemories.length === 0 && (\n            <div className=\"bg-white/80 backdrop-blur-xl rounded-3xl shadow-xl border border-orange-100 p-8 text-center\">\n              <div className=\"text-5xl mb-4\">📖</div>\n              <h3 className=\"text-xl font-bold text-gray-800 mb-2\">No Memories Found</h3>\n              <p className=\"text-gray-600 mb-4\">\n                {searchQuery || filterType !== 'all' || filterDecade !== 'all' || filterPeople !== 'all'\n                  ? 'Try adjusting your filters or search terms'\n                  : 'Start adding memories to your scrapbook!'}\n              </p>\n              {searchQuery || filterType !== 'all' || filterDecade !== 'all' || filterPeople !== 'all' ? (\n                <button\n                  onClick={() => {\n                    setSearchQuery('');\n                    setFilterType('all');\n                    setFilterDecade('all');\n                    setFilterPeople('all');\n                    setVisualTheme('none');\n                  }}\n                  className=\"px-4 py-2 bg-gradient-to-r from-orange-500 to-rose-500 text-white rounded-xl font-bold\"\n                >\n                  Clear Filters\n                </button>\n              ) : (\n                <button\n                  onClick={onBack}\n                  className=\"px-4 py-2 bg-gradient-to-r from-orange-500 to-rose-500 text-white rounded-xl font-bold\"\n                >\n                  Add Your First Memory\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n      </main>\n      \n      {/* Floating Action Button */}\n      <div className=\"fixed bottom-24 right-4\">\n        <button className=\"w-14 h-14 bg-gradient-to-r from-orange-500 to-rose-500 rounded-full shadow-lg flex items-center justify-center text-white hover:shadow-xl transition-all\">\n          <span className=\"text-2xl\">+</span>\n        </button>\n      </div>\n      \n      {/* Export Button */}\n      <div className=\"fixed top-20 right-4\">\n        <button \n          className=\"px-4 py-2 bg-white/80 backdrop-blur-xl rounded-xl shadow-lg border border-orange-100 text-orange-600 font-bold text-sm hover:bg-orange-50 transition-colors flex items-center gap-1\"\n          onClick={showExportOptions}\n          disabled={isExporting}\n        >\n          {isExporting ? (\n            <>\n              <div className=\"w-4 h-4 border-2 border-orange-500 border-t-transparent rounded-full animate-spin\"></div>\n              Exporting...\n            </>\n          ) : (\n            <>\n              <Download className=\"w-4 h-4\" />\n              Export Book\n            </>\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ScrapbookTimeline;\n"],"file":"assets/ScrapbookTimeline-BKaEGhYV.js"}