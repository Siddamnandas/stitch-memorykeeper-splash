{"version":3,"file":"MemoryStrengthBreakdown-vdyNqMpM.js","sources":["../../src/components/MemoryStrengthBreakdown.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { Brain, TrendingUp, Target, Users, Zap, Award, Calendar, Activity, ChevronLeft, BarChart3 } from 'lucide-react';\nimport { useAppState } from '../lib/AppStateContext';\nimport { useAuth } from '../lib/AuthContext';\nimport { MemoryStrengthFactors, MemoryActivity } from '../lib/memoryStrengthService';\n\ninterface MemoryStrengthBreakdownProps {\n  onBack?: () => void;\n}\n\nconst MemoryStrengthBreakdown: React.FC<MemoryStrengthBreakdownProps> = ({ onBack }) => {\n  const { state, dispatch } = useAppState();\n  const { profile } = useAuth();\n\n  const derivedActivities = useMemo<MemoryActivity[]>(() => {\n    const memoryActivities = state.memories.slice(0, 5).map((memory) => ({\n      type: 'memory_added' as MemoryActivity['type'],\n      timestamp: new Date(memory.date),\n      value: Math.min(20, Math.max(5, Math.round((memory.response?.length || 0) / 40))),\n      metadata: { memoryId: memory.id }\n    }));\n\n    const streakActivity: MemoryActivity[] =\n      state.streakCount > 1\n        ? [\n            {\n              type: 'streak_maintained',\n              timestamp: new Date(),\n              value: Math.min(25, state.streakCount * 2),\n              metadata: { streakDays: state.streakCount }\n            }\n          ]\n        : [];\n\n    return [...memoryActivities, ...streakActivity].sort(\n      (a, b) => b.timestamp.getTime() - a.timestamp.getTime()\n    );\n  }, [state.memories, state.streakCount]);\n\n  const factors = useMemo<MemoryStrengthFactors>(() => {\n    if (state.memories.length === 0) {\n      return {\n        consistency: 0,\n        activityCount: 0,\n        recentActivity: 0,\n        engagementDepth: 0,\n        activityDiversity: 0,\n        progressStreak: Math.min(100, state.streakCount * 14.28),\n        challengeLevel: Math.min(100, state.memoryStrength),\n        socialEngagement: Math.min(100, (profile?.invited_family_emails?.length ?? 0) * 20)\n      };\n    }\n\n    const memoryDates = state.memories\n      .map((memory) => new Date(memory.date))\n      .filter((date) => !Number.isNaN(date.getTime()))\n      .sort((a, b) => a.getTime() - b.getTime());\n\n    const uniqueDays = new Set(memoryDates.map((date) => date.toDateString()));\n    const spanDays =\n      memoryDates.length > 1\n        ? Math.max(\n            1,\n            Math.round(\n              (memoryDates[memoryDates.length - 1].getTime() - memoryDates[0].getTime()) /\n                (1000 * 60 * 60 * 24)\n            ) + 1\n          )\n        : 1;\n\n    const consistency = Math.min(100, (uniqueDays.size / spanDays) * 100);\n    const activityCount = Math.min(100, state.memories.length * 5);\n\n    const lastMemoryDate = memoryDates[memoryDates.length - 1] ?? new Date();\n    const daysSinceLast = (Date.now() - lastMemoryDate.getTime()) / (1000 * 60 * 60 * 24);\n    const recentActivity = Math.max(0, 100 - Math.min(100, daysSinceLast * 25));\n\n    const averageLength =\n      state.memories.reduce((total, memory) => total + (memory.response?.length || 0), 0) /\n      state.memories.length;\n    const engagementDepth = Math.min(100, averageLength / 6);\n\n    const typeSet = new Set(state.memories.map((memory) => memory.type || 'text'));\n    const activityDiversity = Math.min(100, (typeSet.size / 4) * 100);\n\n    const progressStreak = Math.min(100, state.streakCount * 14.28);\n    const challengeLevel = Math.min(100, state.memoryStrength);\n\n    const socialConnections = profile?.invited_family_emails?.length ?? 0;\n    const sharedMemories = state.memories.filter((memory) =>\n      (memory.tags || []).some((tag) => tag.toLowerCase().includes('share'))\n    ).length;\n    const socialEngagement = Math.min(100, socialConnections * 20 + sharedMemories * 5);\n\n    return {\n      consistency,\n      activityCount,\n      recentActivity,\n      engagementDepth: Number.isFinite(engagementDepth) ? engagementDepth : 0,\n      activityDiversity,\n      progressStreak,\n      challengeLevel,\n      socialEngagement\n    };\n  }, [profile?.invited_family_emails?.length, state.memories, state.memoryStrength, state.streakCount]);\n\n  const recentActivities = useMemo(() => derivedActivities.slice(0, 5), [derivedActivities]);\n\n  const handleBack = () => {\n    if (onBack) {\n      onBack();\n    } else {\n      dispatch({ type: 'SET_DETAIL_VIEW', payload: null });\n    }\n  };\n\n  const getFactorIcon = (factorKey: keyof MemoryStrengthFactors) => {\n    const icons = {\n      consistency: Calendar,\n      activityCount: Activity,\n      recentActivity: TrendingUp,\n      engagementDepth: Target,\n      activityDiversity: Zap,\n      progressStreak: Award,\n      challengeLevel: Brain,\n      socialEngagement: Users\n    };\n    return icons[factorKey] || BarChart3;\n  };\n\n  const getFactorDescription = (factorKey: keyof MemoryStrengthFactors): string => {\n    const descriptions = {\n      consistency: 'How regularly you engage with memories',\n      activityCount: 'Total number of memory activities',\n      recentActivity: 'How recently you\\'ve been active',\n      engagementDepth: 'Quality and depth of your engagement',\n      activityDiversity: 'Variety of different memory activities',\n      progressStreak: 'Consecutive days of memory practice',\n      challengeLevel: 'Difficulty level of games completed',\n      socialEngagement: 'Sharing and collaborative activities'\n    };\n    return descriptions[factorKey] || 'Memory strength factor';\n  };\n\n  const getActivityIcon = (activityType: MemoryActivity['type']) => {\n    const icons = {\n      memory_added: Brain,\n      memory_imported: TrendingUp,\n      game_completed: Target,\n      memory_reviewed: Activity,\n      daily_login: Calendar,\n      game_perfect_score: Award,\n      memory_shared: Users,\n      streak_maintained: Zap\n    };\n    return icons[activityType] || Activity;\n  };\n\n  const formatActivityDescription = (activity: MemoryActivity): string => {\n    switch (activity.type) {\n      case 'memory_added':\n        return 'Added a new memory';\n      case 'memory_imported':\n        return `Imported from ${activity.metadata?.importSource || 'file'}`;\n      case 'game_completed':\n        return `Completed ${activity.metadata?.gameType || 'game'} (${activity.metadata?.difficulty || 'normal'})`;\n      case 'memory_reviewed':\n        return 'Reviewed existing memories';\n      case 'daily_login':\n        return 'Daily login bonus';\n      case 'game_perfect_score':\n        return `Perfect score on ${activity.metadata?.gameType || 'game'}!`;\n      case 'memory_shared':\n        return 'Shared memories with others';\n      case 'streak_maintained':\n        return `${activity.metadata?.streakDays || 0} day streak maintained`;\n      default:\n        return 'Memory activity';\n    }\n  };\n\n  const formatTimeAgo = (timestamp: Date): string => {\n    const now = new Date();\n    const diff = now.getTime() - timestamp.getTime();\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const days = Math.floor(hours / 24);\n\n    if (days > 0) return `${days}d ago`;\n    if (hours > 0) return `${hours}h ago`;\n    return 'Just now';\n  };\n\n  return (\n    <div className=\"pt-6 space-y-8\">\n      {/* Header */}\n      <div className=\"flex items-center gap-4 mb-6\">\n        <button\n          onClick={handleBack}\n          className=\"w-10 h-10 bg-white/80 backdrop-blur-xl rounded-2xl flex items-center justify-center shadow-lg border border-orange-100 hover:bg-orange-50 transition-colors\"\n          aria-label=\"Go back\"\n        >\n          <ChevronLeft className=\"w-6 h-6 text-gray-700\" />\n        </button>\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-800\">Memory Strength Analysis</h1>\n          <p className=\"text-sm text-gray-600\">Detailed breakdown of your memory progress</p>\n        </div>\n      </div>\n\n      {/* Current Strength Overview */}\n      <div className=\"bg-white/80 backdrop-blur-xl rounded-3xl p-6 shadow-xl border border-orange-100\">\n        <div className=\"flex items-center gap-4 mb-6\">\n          <div className=\"w-16 h-16 bg-gradient-to-br from-orange-400 to-rose-500 rounded-2xl flex items-center justify-center shadow-lg\">\n            <Brain className=\"w-8 h-8 text-white\" />\n          </div>\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Current Strength: {state.memoryStrength}/100</h2>\n            <p className=\"text-gray-600\">Keep up the great work to maintain and improve your memory!</p>\n          </div>\n        </div>\n\n        {/* Progress Bar */}\n        <div className=\"mb-6\">\n          <div className=\"w-full bg-gray-200 rounded-full h-4\">\n            <div\n              className=\"bg-gradient-to-r from-orange-400 to-rose-500 h-4 rounded-full transition-all duration-500\"\n              style={{ width: `${state.memoryStrength}%` }}\n            />\n          </div>\n          <div className=\"flex justify-between text-sm text-gray-600 mt-2\">\n            <span>Beginner</span>\n            <span>Intermediate</span>\n            <span>Advanced</span>\n            <span>Expert</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Strength Factors Breakdown */}\n      {factors && (\n        <div className=\"bg-white/80 backdrop-blur-xl rounded-3xl p-6 shadow-xl border border-orange-100\">\n          <h2 className=\"text-xl font-bold text-gray-800 mb-6\">Strength Factors</h2>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {Object.entries(factors).map(([key, value]) => {\n              const IconComponent = getFactorIcon(key as keyof MemoryStrengthFactors);\n              const description = getFactorDescription(key as keyof MemoryStrengthFactors);\n\n              return (\n                <div key={key} className=\"flex items-center gap-4 p-4 bg-gray-50 rounded-2xl\">\n                  <div className=\"w-10 h-10 bg-orange-100 rounded-xl flex items-center justify-center\">\n                    <IconComponent className=\"w-5 h-5 text-orange-600\" />\n                  </div>\n\n                  <div className=\"flex-1\">\n                    <div className=\"flex justify-between items-center mb-1\">\n                      <span className=\"font-medium text-gray-800 capitalize\">\n                        {key.replace(/([A-Z])/g, ' $1').trim()}\n                      </span>\n                      <span className=\"text-sm font-bold text-orange-600\">{Math.round(value)}/100</span>\n                    </div>\n                    <p className=\"text-sm text-gray-600\">{description}</p>\n\n                    {/* Factor Progress Bar */}\n                    <div className=\"mt-2 w-full bg-gray-200 rounded-full h-2\">\n                      <div\n                        className=\"bg-orange-400 h-2 rounded-full transition-all duration-300\"\n                        style={{ width: `${value}%` }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n\n      {/* Recent Activities */}\n      <div className=\"bg-white/80 backdrop-blur-xl rounded-3xl p-6 shadow-xl border border-orange-100\">\n        <h2 className=\"text-xl font-bold text-gray-800 mb-6\">Recent Activities</h2>\n\n        {recentActivities.length > 0 ? (\n          <div className=\"space-y-4\">\n            {recentActivities.map((activity, index) => {\n              const IconComponent = getActivityIcon(activity.type);\n              const description = formatActivityDescription(activity);\n              const timeAgo = formatTimeAgo(activity.timestamp);\n\n              return (\n                <div key={index} className=\"flex items-center gap-4 p-4 bg-gray-50 rounded-2xl\">\n                  <div className=\"w-10 h-10 bg-blue-100 rounded-xl flex items-center justify-center\">\n                    <IconComponent className=\"w-5 h-5 text-blue-600\" />\n                  </div>\n\n                  <div className=\"flex-1\">\n                    <p className=\"font-medium text-gray-800\">{description}</p>\n                    <div className=\"flex justify-between items-center mt-1\">\n                      <span className=\"text-sm text-gray-500\">{timeAgo}</span>\n                      <span className=\"text-sm font-semibold text-green-600\">+{activity.value} pts</span>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <div className=\"text-center py-8\">\n            <Activity className=\"w-12 h-12 text-gray-300 mx-auto mb-4\" />\n            <p className=\"text-gray-500\">No recent activities yet</p>\n            <p className=\"text-sm text-gray-400 mt-2\">Start adding memories and playing games to see your activity here!</p>\n          </div>\n        )}\n      </div>\n\n      {/* Tips for Improvement */}\n      <div className=\"bg-white/80 backdrop-blur-xl rounded-3xl p-6 shadow-xl border border-orange-100\">\n        <h2 className=\"text-xl font-bold text-gray-800 mb-6\">Tips to Improve Memory Strength</h2>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-start gap-3\">\n              <div className=\"w-8 h-8 bg-orange-100 rounded-lg flex items-center justify-center mt-1\">\n                <span className=\"text-orange-600 font-bold text-sm\">1</span>\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-gray-800\">Stay Consistent</h3>\n                <p className=\"text-sm text-gray-600\">Try to engage with memories daily to build strong habits.</p>\n              </div>\n            </div>\n\n            <div className=\"flex items-start gap-3\">\n              <div className=\"w-8 h-8 bg-orange-100 rounded-lg flex items-center justify-center mt-1\">\n                <span className=\"text-orange-600 font-bold text-sm\">2</span>\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-gray-800\">Challenge Yourself</h3>\n                <p className=\"text-sm text-gray-600\">Play harder difficulty levels in memory games.</p>\n              </div>\n            </div>\n\n            <div className=\"flex items-start gap-3\">\n              <div className=\"w-8 h-8 bg-orange-100 rounded-lg flex items-center justify-center mt-1\">\n                <span className=\"text-orange-600 font-bold text-sm\">3</span>\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-gray-800\">Share Memories</h3>\n                <p className=\"text-sm text-gray-600\">Collaborate with family and friends to strengthen social connections.</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div className=\"flex items-start gap-3\">\n              <div className=\"w-8 h-8 bg-orange-100 rounded-lg flex items-center justify-center mt-1\">\n                <span className=\"text-orange-600 font-bold text-sm\">4</span>\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-gray-800\">Try Different Activities</h3>\n                <p className=\"text-sm text-gray-600\">Mix up your routine with various games and memory exercises.</p>\n              </div>\n            </div>\n\n            <div className=\"flex items-start gap-3\">\n              <div className=\"w-8 h-8 bg-orange-100 rounded-lg flex items-center justify-center mt-1\">\n                <span className=\"text-orange-600 font-bold text-sm\">5</span>\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-gray-800\">Maintain Streaks</h3>\n                <p className=\"text-sm text-gray-600\">Build consecutive days of activity for bonus points.</p>\n              </div>\n            </div>\n\n            <div className=\"flex items-start gap-3\">\n              <div className=\"w-8 h-8 bg-orange-100 rounded-lg flex items-center justify-center mt-1\">\n                <span className=\"text-orange-600 font-bold text-sm\">6</span>\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-gray-800\">Review Regularly</h3>\n                <p className=\"text-sm text-gray-600\">Periodically review your existing memories to reinforce them.</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MemoryStrengthBreakdown;\n"],"names":["MemoryStrengthBreakdown","onBack","state","dispatch","useAppState","profile","useAuth","derivedActivities","useMemo","memoryActivities","memory","_a","streakActivity","a","b","factors","memoryDates","date","uniqueDays","spanDays","consistency","activityCount","lastMemoryDate","daysSinceLast","recentActivity","averageLength","total","engagementDepth","typeSet","activityDiversity","progressStreak","challengeLevel","socialConnections","_b","sharedMemories","tag","socialEngagement","recentActivities","handleBack","getFactorIcon","factorKey","Calendar","Activity","TrendingUp","Target","Zap","Award","Brain","Users","BarChart3","getFactorDescription","getActivityIcon","activityType","formatActivityDescription","activity","_c","_d","_e","formatTimeAgo","timestamp","diff","hours","days","jsxs","jsx","ChevronLeft","key","value","IconComponent","description","index","timeAgo"],"mappings":"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"}