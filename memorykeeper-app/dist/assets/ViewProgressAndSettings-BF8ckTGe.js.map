{"version":3,"file":"ViewProgressAndSettings-BF8ckTGe.js","sources":["../../src/components/LanguageSelector.tsx","../../src/components/ViewProgressAndSettings.tsx"],"sourcesContent":["\nimport { type FC, type ChangeEvent } from 'react';\nimport { useLanguage } from '../lib/LanguageContext';\nimport { useAppState } from '../lib/AppStateContext';\nimport { useTranslation } from 'react-i18next';\n\nconst LanguageSelector: FC = () => {\n  const { language, setLanguage, availableLanguages } = useLanguage();\n  const { dispatch } = useAppState();\n  const { t } = useTranslation();\n\n  const handleLanguageChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    const newLanguage = e.target.value as any;\n    setLanguage(newLanguage);\n    dispatch({ type: 'SET_LANGUAGE', payload: newLanguage });\n  };\n\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <label htmlFor=\"language-select\" className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n        {t('settings.language')}:\n      </label>\n      <select\n        id=\"language-select\"\n        value={language}\n        onChange={handleLanguageChange}\n        className=\"bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm py-1 px-2 text-sm focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-orange-500 dark:text-white\"\n      >\n        {availableLanguages.map((lang) => (\n          <option key={lang.code} value={lang.code}>\n            {lang.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default LanguageSelector;\n","import { useState, useMemo, type FC } from 'react';\n\nimport { ChevronLeft, Zap, Calendar, Trophy, Users } from 'lucide-react';\nimport LanguageSelector from './LanguageSelector';\nimport { useAppState } from '../lib/AppStateContext';\nimport { useAuth } from '../lib/AuthContext';\nimport { useTheme } from '../lib/ThemeContext';\n\ninterface ViewProgressAndSettingsProps {\n  onBack: () => void;\n}\n\nconst ViewProgressAndSettings: FC<ViewProgressAndSettingsProps> = ({ onBack }) => {\n  const [notifications, setNotifications] = useState(true);\n  const [reminders, setReminders] = useState(true);\n  const { state, dispatch } = useAppState();\n  const { profile } = useAuth();\n  const { isDarkMode, setDarkMode } = useTheme();\n\n  const stats = useMemo(\n    () => [\n      { label: 'Memories Recorded', value: String(state.memories.length), icon: Trophy },\n      { label: 'Day Streak', value: String(state.streakCount), icon: Calendar },\n      { label: 'Memory Strength', value: `${Math.round(state.memoryStrength)}%`, icon: Zap },\n      {\n        label: 'Family Connections',\n        value: String(profile?.invited_family_emails?.length ?? 0),\n        icon: Users\n      }\n    ],\n    [profile?.invited_family_emails?.length, state.memories.length, state.memoryStrength, state.streakCount]\n  );\n\n  const handleSaveSettings = () => {\n    // In a real app, you would save these settings to a database or local storage\n    console.log('Settings saved:', { notifications, darkMode: isDarkMode, reminders });\n    alert('Settings saved successfully!');\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gradient-to-br from-amber-50 via-orange-50 to-rose-50 font-display\">\n      <main className=\"flex-grow p-4\">\n        <header className=\"flex items-center mb-6\">\n          <button\n            className=\"w-10 h-10 bg-white/80 backdrop-blur-xl rounded-2xl flex items-center justify-center shadow-lg border border-orange-100\"\n            onClick={onBack}\n          >\n            <ChevronLeft className=\"w-6 h-6 text-gray-700\" />\n          </button>\n          <h1 className=\"text-2xl font-bold text-center flex-1 pr-10 text-gray-800\">Progress & Settings</h1>\n        </header>\n        \n        <div className=\"bg-white/80 backdrop-blur-xl rounded-3xl shadow-xl border border-orange-100 p-6 mb-6\">\n          <h2 className=\"text-xl font-bold mb-4 text-gray-800\">Your Progress</h2>\n          \n          <div className=\"grid grid-cols-2 gap-4 mb-6\">\n            {stats.map((stat, index) => {\n              const Icon = stat.icon;\n              return (\n                <div key={index} className=\"bg-gradient-to-br from-orange-50 to-amber-50 p-4 rounded-2xl text-center shadow-lg border border-orange-100\">\n                  <div className=\"flex justify-center mb-2\">\n                    <Icon className=\"w-8 h-8 text-orange-500\" />\n                  </div>\n                  <div className=\"text-2xl font-bold text-orange-600\">{stat.value}</div>\n                  <div className=\"text-gray-600 text-sm\">{stat.label}</div>\n                </div>\n              );\n            })}\n          </div>\n\n          <div className=\"bg-gradient-to-br from-orange-100 to-amber-100 rounded-2xl p-4 mb-6 shadow-lg border border-orange-200\">\n            <h3 className=\"text-sm font-semibold text-orange-700 mb-3 uppercase tracking-wide\">Recently Added Memories</h3>\n            {state.memories.length === 0 ? (\n              <p className=\"text-gray-600 text-sm\">Capture your first memory to see progress updates.</p>\n            ) : (\n              <ul className=\"space-y-3\">\n                {state.memories.slice(0, 3).map((memory) => (\n                  <li key={memory.id} className=\"bg-white/70 rounded-xl p-3 border border-orange-100\">\n                    <p className=\"text-sm font-semibold text-gray-800 line-clamp-2\">{memory.response}</p>\n                    <div className=\"flex justify-between text-xs text-gray-500 mt-2\">\n                      <span>{new Date(memory.date).toLocaleDateString()}</span>\n                      <span>{memory.type === 'visual' ? 'Visual Memory' : 'Journal Entry'}</span>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={() => dispatch({ type: 'SET_DETAIL_VIEW', payload: 'premium-features' })}\n          className=\"w-full mt-4 bg-[#4DB6AC] text-white font-bold py-4 px-4 rounded-2xl shadow-lg hover:shadow-xl transition-all\"\n        >\n          Upgrade to Premium\n        </button>\n        \n        <div className=\"bg-white/80 backdrop-blur-xl rounded-3xl shadow-xl border border-orange-100 p-6 mb-6\">\n          <h2 className=\"text-xl font-bold mb-4 text-gray-800\">Settings</h2>\n          \n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-gray-800\">Enable Notifications</span>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input \n                  type=\"checkbox\" \n                  className=\"sr-only peer\" \n                  checked={notifications}\n                  onChange={() => setNotifications(!notifications)}\n                />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-gradient-to-r from-orange-500 to-rose-500\"></div>\n              </label>\n            </div>\n            \n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-gray-800\">Dark Mode</span>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input \n                  type=\"checkbox\" \n                  className=\"sr-only peer\" \n                  checked={isDarkMode}\n                  onChange={() => setDarkMode(!isDarkMode)}\n                />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-gradient-to-r from-orange-500 to-rose-500\"></div>\n              </label>\n            </div>\n            \n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-gray-800\">Daily Reminders</span>\n              <label className=\"relative inline-flex items-center cursor-pointer\">\n                <input \n                  type=\"checkbox\" \n                  className=\"sr-only peer\" \n                  checked={reminders}\n                  onChange={() => setReminders(!reminders)}\n                />\n                <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-gradient-to-r from-orange-500 to-rose-500\"></div>\n              </label>\n            </div>\n            \n            <div className=\"flex items-center justify-between pt-4 border-t border-gray-200\">\n              <LanguageSelector />\n            </div>\n          </div>\n          \n          <button \n            className=\"w-full mt-6 bg-gradient-to-r from-orange-500 to-rose-500 text-white font-bold py-4 px-4 rounded-2xl shadow-lg hover:shadow-xl transition-all\"\n            onClick={handleSaveSettings}\n          >\n            Save Settings\n          </button>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default ViewProgressAndSettings;\n"],"names":["LanguageSelector","language","setLanguage","availableLanguages","useLanguage","dispatch","useAppState","t","useTranslation","handleLanguageChange","e","newLanguage","jsxs","jsx","lang","ViewProgressAndSettings","onBack","notifications","setNotifications","useState","reminders","setReminders","state","profile","useAuth","isDarkMode","setDarkMode","useTheme","stats","useMemo","Trophy","Calendar","Zap","_a","Users","handleSaveSettings","ChevronLeft","stat","index","Icon","memory"],"mappings":"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"}